[{"E:\\GeeksMan-2k21-FrontEnd\\src\\index.js":"1","E:\\GeeksMan-2k21-FrontEnd\\src\\App.js":"2","E:\\GeeksMan-2k21-FrontEnd\\src\\serviceWorker.js":"3","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\questionpage.js":"4","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\auth.js":"5","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\contest.js":"6","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\MainLayout.js":"7","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\utility.js":"8","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\actionsTypes.js":"9","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\NotFound.js":"10","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\Contests.js":"11","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomePage.js":"12","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\loginpage.js":"13","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\questionpage\\Questiondrawer.js":"14","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\userpanel.js":"15","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\About.js":"16","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestsHome.js":"17","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\index.js":"18","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Navbar.js":"19","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHome.js":"20","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomepageCarousel.js":"21","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\Participation.js":"22","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\modals\\modal.js":"23","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\About-memberscard.js":"24","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\Developers-card.js":"25","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\events.js":"26","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\coordinators.js":"27","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHeader.js":"28","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestCard.js":"29","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\questionpage.js":"30","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\auth.js":"31","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\users.js":"32","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\contests.js":"33","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\TopPerformersSlide.js":"34","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\LoginSlide.js":"35","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\ContestSlide.js":"36","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\contact.js":"37","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\users.js":"38","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\underconstruction.js":"39","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\about.js":"40","E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\about.js":"41"},{"size":1390,"mtime":1611222693052,"results":"42","hashOfConfig":"43"},{"size":195,"mtime":1611028067067,"results":"44","hashOfConfig":"43"},{"size":5086,"mtime":1610814163221,"results":"45","hashOfConfig":"43"},{"size":4199,"mtime":1611427804248,"results":"46","hashOfConfig":"43"},{"size":1954,"mtime":1611370542494,"results":"47","hashOfConfig":"43"},{"size":2968,"mtime":1611490516111,"results":"48","hashOfConfig":"43"},{"size":2365,"mtime":1611383216476,"results":"49","hashOfConfig":"43"},{"size":133,"mtime":1610643382075,"results":"50","hashOfConfig":"43"},{"size":1886,"mtime":1611413785935,"results":"51","hashOfConfig":"43"},{"size":13263,"mtime":1610814163189,"results":"52","hashOfConfig":"43"},{"size":1723,"mtime":1611383930345,"results":"53","hashOfConfig":"43"},{"size":548,"mtime":1610814163183,"results":"54","hashOfConfig":"43"},{"size":8923,"mtime":1611408567967,"results":"55","hashOfConfig":"43"},{"size":15005,"mtime":1611494717755,"results":"56","hashOfConfig":"43"},{"size":11610,"mtime":1611411204099,"results":"57","hashOfConfig":"43"},{"size":12924,"mtime":1611493257465,"results":"58","hashOfConfig":"43"},{"size":1726,"mtime":1611381605328,"results":"59","hashOfConfig":"43"},{"size":337,"mtime":1611413868634,"results":"60","hashOfConfig":"43"},{"size":3237,"mtime":1611425101728,"results":"61","hashOfConfig":"43"},{"size":3966,"mtime":1611495094733,"results":"62","hashOfConfig":"43"},{"size":1465,"mtime":1611373424439,"results":"63","hashOfConfig":"43"},{"size":635,"mtime":1610814163217,"results":"64","hashOfConfig":"43"},{"size":2473,"mtime":1611295788284,"results":"65","hashOfConfig":"43"},{"size":1727,"mtime":1611415818148,"results":"66","hashOfConfig":"43"},{"size":477,"mtime":1611138523978,"results":"67","hashOfConfig":"43"},{"size":842,"mtime":1611152889571,"results":"68","hashOfConfig":"43"},{"size":528,"mtime":1611200890555,"results":"69","hashOfConfig":"43"},{"size":185,"mtime":1610814163177,"results":"70","hashOfConfig":"43"},{"size":4250,"mtime":1611484974333,"results":"71","hashOfConfig":"43"},{"size":2343,"mtime":1611493199100,"results":"72","hashOfConfig":"43"},{"size":2501,"mtime":1611491135712,"results":"73","hashOfConfig":"43"},{"size":3626,"mtime":1611491201319,"results":"74","hashOfConfig":"43"},{"size":3538,"mtime":1611494098299,"results":"75","hashOfConfig":"43"},{"size":1300,"mtime":1610814163185,"results":"76","hashOfConfig":"43"},{"size":1185,"mtime":1611493125816,"results":"77","hashOfConfig":"43"},{"size":661,"mtime":1611377838199,"results":"78","hashOfConfig":"43"},{"size":121,"mtime":1611144617108,"results":"79","hashOfConfig":"43"},{"size":3173,"mtime":1611410336755,"results":"80","hashOfConfig":"43"},{"size":253,"mtime":1611220914077,"results":"81","hashOfConfig":"43"},{"size":1197,"mtime":1611413817948,"results":"82","hashOfConfig":"43"},{"size":840,"mtime":1611491115520,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"m2axyq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"E:\\GeeksMan-2k21-FrontEnd\\src\\index.js",[],["178","179"],"E:\\GeeksMan-2k21-FrontEnd\\src\\App.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\serviceWorker.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\questionpage.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\auth.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\contest.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\MainLayout.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\utility.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\actionsTypes.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\NotFound.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\Contests.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomePage.js",["180","181"],"import React,{useState} from 'react';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport Navbar from '../Navbar';\r\nimport HomepageCarousel from './HomepageCarousel';\r\nimport LoginModal from '../utils/modals/modal';\r\n// import Footer from './Footer';\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <div className=\"homepage\">\r\n            <Navbar />\r\n            <HomepageCarousel />\r\n\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\loginpage.js",["182","183","184"],"import React, { Component } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Modal from \"../utils/modals/modal\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport geeksman from \"../images/png/geeksman.png\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    activeClass: \"container\",\r\n    email: \"\",\r\n    password: \"\",\r\n    newemail: \"\",\r\n    newpassword: \"\",\r\n    validatenewpassword: \"\",\r\n    name: \"\",\r\n    success: false,\r\n    alert: \"\",\r\n    modal: false,\r\n    modalmessage: \"\",\r\n    modalheader: \"\",\r\n    field: \"\",\r\n  };\r\n\r\n \r\n\r\n\r\n  signInShow = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ activeClass: \"container\" });\r\n  };\r\n\r\n  signUpShow = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ activeClass: \"container active\" });\r\n  };\r\n\r\n  setLogin = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"\") {\r\n      this.setState({\r\n        alert: \"Please Enter Email\",\r\n        success: true,\r\n      });\r\n    } else if (this.state.password === \"\") {\r\n      this.setState({\r\n        alert: \"Please Enter Password\",\r\n        success: true,\r\n      });\r\n    } else {\r\n      this.props.reduxLogin(this.state.email, this.state.password);\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ success: false });\r\n  };\r\n\r\n  handleForgetPassword = () => {\r\n    this.setState({\r\n      modal: true,\r\n      modalmessage:\r\n        \"Please type your emailaddress associated with your account, we will send an email to you, check your email inbox to reset your password. If you are unable to find the reset email please check your spam folder.\",\r\n      modalheader: \"Reset your password\",\r\n      field: \"Type Your Email\",\r\n    });\r\n  };\r\n\r\n  errorHandle = () =>{\r\n    this.setState({success:true,alert:\"Wrong id/Password\"})\r\n  }\r\n\r\n  setSignup = (e) => {\r\n    e.preventDefault();\r\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    var passwordformat = /^(?=(.*[a-zA-Z]){1,})(?=(.*[0-9]){2,}).{8,}$/;\r\n\r\n    if (this.state.name === \"\") {\r\n      this.setState({ alert: \"Enter Valid Name\", success: true });\r\n      console.log(\"enter name\");\r\n    } else if (!this.state.newemail.match(mailformat)) {\r\n      this.setState({ alert: \"Enter Valid Email\", success: true });\r\n    } else if (this.state.newpassword === \"\") {\r\n      this.setState({ alert: \"Enter Password\", success: true });\r\n    } else if (!this.state.newpassword.match(passwordformat)) {\r\n      this.setState({\r\n        alert: \"Password must be minimun 8 digits with atleast 2 numericals\",\r\n        success: true,\r\n      });\r\n    } else if (this.state.validatenewpassword === this.state.newpassword) {\r\n\r\n      this.props.postUser(\r\n        this.state.name,\r\n        this.state.newemail,\r\n        this.state.newpassword\r\n      );\r\n\r\n      this.setState({\r\n        modal: true,\r\n        modalmessage:\r\n          \"Please check your email inbox to confirm your email address. If you are unable to find the confirmation email please check your spam folder.\",\r\n        modalheader: \"Confirm your email address\",\r\n      });\r\n    } else {\r\n      this.setState({ alert: \"Password doesnot match\", success: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to=\"/contests\" />;\r\n    }\r\n    let authRedirect2 = null;\r\n    if (this.props.forgetstatus === \"OK\") {\r\n      authRedirect2 = <Redirect to=\"/contests\" />;\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"section\">\r\n          <div class={this.state.activeClass}>\r\n            <div class=\"user signinBx\">\r\n              <div class=\"imgBx\">\r\n                <img src={geeksman} alt=\"\" />\r\n              </div>\r\n              <div class=\"formBx\">\r\n                <form>\r\n                  <h2>Sign In</h2>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        email: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.email}\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        password: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.password}\r\n                  />\r\n                  <input\r\n                    onClick={(e) => this.setLogin(e)}\r\n                    type=\"submit\"\r\n                    name=\"\"\r\n                    value=\"Login\"\r\n                  />\r\n                  <br />\r\n                  <p class=\"signup\">\r\n                    <a href=\"#\" onClick={(e) => this.handleForgetPassword(e)}>\r\n                      Forgot your password?\r\n                    </a>\r\n                  </p>\r\n\r\n                  <p class=\"signup\">\r\n                    Don't have an account ?\r\n                    <a href=\"#\" onClick={(e) => this.signUpShow(e)}>\r\n                      Sign Up\r\n                    </a>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div class=\"user signupBx\">\r\n              <div class=\"formBx\">\r\n                <form>\r\n                  <h2>Create an account</h2>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        name: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.name}\r\n                  />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        newemail: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.newemail}\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        newpassword: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.newpassword}\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        validatenewpassword: e.target.value,\r\n                      })\r\n                    }\r\n                    value={this.state.validatenewpassword}\r\n                  />\r\n                  <input\r\n                    onClick={(e) => this.setSignup(e)}\r\n                    type=\"submit\"\r\n                    name=\"\"\r\n                    value=\"Sign Up\"\r\n                  />\r\n                  <p class=\"signup\">\r\n                    Already have an account ?\r\n                    <a href=\"#\" onClick={(e) => this.signInShow(e)}>\r\n                      Sign In\r\n                    </a>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n              <div class=\"imgBx\">\r\n                <img src={geeksman} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {authRedirect}\r\n        {authRedirect2}\r\n\r\n        <Snackbar\r\n          open={this.state.success}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n        >\r\n          <Alert onClose={this.handleClose} severity=\"error\">\r\n            {this.state.alert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Modal\r\n          show={this.state.modal}\r\n          message={this.state.modalmessage}\r\n          confirm=\"false\"\r\n          heading={this.state.modalheader}\r\n          field={this.state.field}\r\n        />\r\n       \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    reduxLogin: (email, password) => {\r\n      dispatch(actions.reduxLogin(email, password));\r\n    },\r\n    postUser: (name, email, password) => {\r\n      dispatch(actions.postUser(name, email, password));\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token!==null,\r\n    forgetstatus: state.auth.forgetstatus,\r\n    error:state.auth.autherror,\r\n    errorauth:state.auth.autherror!==null\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\questionpage\\Questiondrawer.js",["185","186","187","188","189","190","191","192","193"],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\userpanel.js",["194","195","196"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ProfileIcon from \"@material-ui/icons/AccountBox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Participation from \"./Participation\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from '../utils/modals/modal'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction UserPanel(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [college, setCollege] = React.useState(\"\");\r\n  const [year, setYear] = React.useState(\"\");\r\n  const [phoneno, setPhoneno] = React.useState(\"\");\r\n  const [branch, setBranch] = React.useState(\"\");\r\n  const [image, setImage] = React.useState(\"\");\r\n  const [redirect,setRedirect] =React.useState(false);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const [selectedbtn, setselectedbtn] = React.useState(\"homebtn\");\r\n\r\n  const handlePatch=(e)=>{\r\n    e.preventDefault();\r\n    props.patchUser(props.userid,college,year,branch,phoneno)\r\n\r\n  }\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            setselectedbtn(\"homebtn\");\r\n          }}\r\n          selected={selectedbtn === \"homebtn\"}\r\n        >\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Details\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            setselectedbtn(\"updateprofile\");\r\n          }}\r\n          selected={selectedbtn === \"updateprofile\"}\r\n        >\r\n          <ListItemIcon>\r\n            <ProfileIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"UpdateProfile\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            setRedirect(true);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <ProfileIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Return To Home\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n    let authRedirect2 = null;\r\n\r\n    if (redirect) {\r\n      authRedirect2 = (\r\n        <Redirect to=\"/\" />\r\n      );\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {authRedirect2}\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className=\"headinginfo\">\r\n            <h5>Welcome,</h5>\r\n            {props.userdata.name}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography>\r\n          {selectedbtn === \"homebtn\" && (\r\n            <div className=\"aboutuser\">\r\n              <div className=\"userinfo\">\r\n                <div className=\"userimagebox\">\r\n                  <Avatar className=\"styleimage\">\r\n                    <img src={props.userdata.image} />\r\n                  </Avatar>\r\n                </div>\r\n                <div className=\"userinfobox\">\r\n                  <div className=\"nameinfo\">\r\n                    <h3>{props.userdata.name}</h3>\r\n                  </div>\r\n                  <div className=\"collegeinfo\">\r\n                    <span>Studying at {props.userdata.college}</span>\r\n                  </div>\r\n\r\n                  <div className=\"educationinfo\">\r\n                    <h4>\r\n                      Education: <span>{props.userdata.college}</span>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"participationinfo\">\r\n                <div className=\"participationheading\">\r\n                  <h2 className=\"participationheadingstyle\">Participation:</h2>\r\n                </div>\r\n                <div className=\"contestinfocards\">\r\n                  {props.usercontests === null && (\r\n                    <h3>You haven't participated in any contest uptil now!!</h3>\r\n                  )}\r\n                  {props.usercontestdata !== null &&\r\n                    props.usercontestdata.map((contest) => (\r\n                      <Participation\r\n                        contestname={contest.contestname}\r\n                        rank=\"null\"\r\n                        marks={contest.marks}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedbtn === \"updateprofile\" && (\r\n            <div>\r\n              <div className=\"mainupdate\">\r\n                <h1>Update Profile</h1>\r\n              </div>\r\n              <div className=\"updateform\">\r\n              <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"Name\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"Name\"\r\n                  fullWidth\r\n                  disabled\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={props.userdata.name}\r\n                  \r\n                />\r\n                <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"Email\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"Email\"\r\n                  fullWidth\r\n                  disabled\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={props.userdata.email}\r\n                />\r\n                \r\n                <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"College\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"College\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={college}\r\n                  onChange={(e) => setCollege(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"Year\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"Year\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={year}\r\n                  onChange={(e) => setYear(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"Branch\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"Branch\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={branch}\r\n                  onChange={(e) => setBranch(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"standard-full-width\"\r\n                  label=\"Phone No (Whatsapp)\"\r\n                  style={{ margin: 8 }}\r\n                  placeholder=\"Phone No (Whatsapp)\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={phoneno}\r\n                  onChange={(e) => setPhoneno(e.target.value)}\r\n                />\r\n                <button className=\"login-button\" onClick={e=>handlePatch(e)}>Submit</button>\r\n              </div>\r\n              \r\n            </div>\r\n          )}\r\n\r\n          {props.patchStatus!==null?<Modal show=\"true\" message=\"Details Updated Successfully\" header=\"Success!\" confirm=\"false\" />:<></>}\r\n          \r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getQuestions: (token) => {\r\n      dispatch(actions.getQuestions(token));\r\n    },\r\n    postQuestions: (token, data) => {\r\n      dispatch(actions.postQuestions(token, data));\r\n    },\r\n    patchUser:(uid,clg,yr,br,phone) =>{\r\n      dispatch(actions.patchUser(uid,clg,yr,br,phone))\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token != null,\r\n    userdata: state.user.userdata,\r\n    usercontestdata: state.user.usercontestdata,\r\n    userid:state.auth.userid,\r\n    patchStatus:state.user.patchStatus\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPanel);\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\About.js",["197"],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestsHome.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\index.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Navbar.js",["198"],"import React,{useState} from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport Geeksman from \"./images/png/geeksman.png\";\r\nimport \"bootstrap/js/src/collapse.js\";\r\n\r\nconst Navbar = (props) => {\r\n  \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-logo navbar-brand\" to=\"/\">\r\n          <img alt=\"svgImg\" width=\"48px\" src={Geeksman} />\r\n          GeeksMan\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/contests\">\r\n                Contests\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link  \" to=\"/about\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            {props.isAuthenticated && (\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}><Link to=\"/userpanel\">Profile</Link></MenuItem>\r\n                  <MenuItem onClick={handleClose}><Link to=\"/userpanel\">Settings</Link></MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token!=null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHome.js",["199"],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomepageCarousel.js",["200"],"import React, { Component } from \"react\";\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport LoginSlide from \"./LoginSlide\";\r\nimport TopPerformersSlide from \"./TopPerformersSlide\";\r\nimport ContestSlide from \"./ContestSlide\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomepageCarousel extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"homepage-carousel-container\">\r\n        <OwlCarousel\r\n          className=\"owl-theme\"\r\n          loop\r\n          margin={10}\r\n          items={1}\r\n          nav={false}\r\n          autoplay\r\n          autoplayTimeout={400000}\r\n        >\r\n          <div className=\"item\">\r\n            <LoginSlide authenticated={this.props.isAuthenticated} />\r\n          </div>\r\n          <div className=\"item\">\r\n            <ContestSlide\r\n              name={this.props.data[0].Contestname}\r\n              starttime={this.props.data[0].starttime}\r\n              endtime={this.props.data[0].endtime}\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <TopPerformersSlide />\r\n          </div>\r\n          \r\n        </OwlCarousel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated :state.auth.token!==null,\r\n    data: state.contest.contestdata,\r\n    userid:state.auth.userid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomepageCarousel);\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\Participation.js",["201"],"import React from 'react'\r\nimport Divider from \"@material-ui/core/Divider\";\r\nfunction Participation({contestname,rank,marks}) {\r\n    return (\r\n        <div className=\"participationcard\">\r\n            <div className=\"upperhalf\">\r\n              <h4>{contestname}</h4>\r\n            </div>\r\n            \r\n            <div className=\"lowerhalf\">\r\n              <div className=\"rankinfo\">\r\n                Rank:<span>{rank}</span>\r\n              </div>\r\n              <div className=\"marksinfo\">\r\n                Marks:<span>{marks}</span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Participation\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\modals\\modal.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\About-memberscard.js",["202","203","204"],"import React from \"react\";\r\nimport image from \"../images/image.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Aboutprofilecard(props) {\r\n  var members = (\r\n    <>\r\n      {props.member.map((member, index) => (\r\n        <>\r\n          <div class=\"card\" style={{width:'18rem'}}>\r\n            <div class=\"banner\">\r\n              <img src={member.image} />\r\n            </div>\r\n            <div class=\"menu\"></div>\r\n            <h2 class=\"name\">{member.name}</h2>\r\n            <div class=\"title\">{member.post}</div>\r\n            <div className=\"branch\">\r\n              <span>\r\n                <b>Branch</b>:-{member.batch} Year {member.branch}\r\n              </span>\r\n            </div>\r\n            <div className=\"sociallinks\">\r\n              <span>\r\n                <b>Social</b>:-&nbsp;&nbsp;\r\n              </span>\r\n              <Link href={member.github} className=\"github\">\r\n                <i class=\"fab fa-github\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n              <Link href={member.instagram} className=\"insta\">\r\n                <i className=\"fab fa-instagram\"></i>\r\n              </Link>\r\n              <Link href={member.linkedln} className=\"linkedin\">\r\n                <i class=\"fab fa-linkedin\"></i>\r\n              </Link>\r\n            </div>\r\n            <div class=\"actions\"></div>\r\n          </div>\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"faculty__content\">\r\n      {members}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    member: state.about.memberdata,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Aboutprofilecard);\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\Developers-card.js",["205"],"import React from \"react\";\r\n\r\n\r\nexport default function MediaCard(props) {\r\n  return (\r\n     \r\n          <div className=\"devcards\"> \r\n              <div class=\"card\">\r\n    <div class=\"bannerdeveloper\">\r\n      <img src={props.image}/>\r\n    </div>\r\n    <div class=\"menu\">\r\n      \r\n    </div>\r\n    <h2 class=\"name\">{props.name}</h2>\r\n    <div class=\"title\">{props.stack}</div>\r\n    <div class=\"actions\">\r\n       \r\n    </div>\r\n   \r\n</div>    \r\n          </div>\r\n        \r\n  );\r\n}\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\events.js",["206"],"import React from 'react'\r\n\r\nfunction Events(props){\r\n    return(\r\n\r\n        <div className=\"events__card\">\r\n          <div className=\"event-image\">\r\n           <img src={props.image}/>\r\n          </div>\r\n          <div className=\"event-info\">\r\n           <h2>{props.eventname}</h2>\r\n           <div className=\"description_event\">\r\n               <p>\r\n                   {props.description}\r\n\r\n               </p>\r\n           </div>\r\n           <div className=\"dateandtime\">\r\n               <span><b>Date</b>{props.date}</span>\r\n               <span><b>Time</b>{props.time}</span>\r\n               <span><b>Venue</b>:-Online</span>\r\n           </div>\r\n           <div className=\"entryfee\">\r\n               <span><b>Entry Fee</b>:-Free</span>\r\n           </div>\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n    };\r\n\r\n    export default Events;\r\n","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\coordinators.js",["207"],"import React, { Component } from 'react';\r\n\r\nclass Developer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        \r\n        <div class=\"card\">\r\n    <div class=\"bannercr\">\r\n      <img src={this.props.image}/>\r\n    </div>\r\n    <div class=\"menu\">\r\n      \r\n    </div>\r\n    <h2 class=\"name\">{this.props.name}</h2>\r\n    <div class=\"title\">{this.props.post}</div>\r\n    <div class=\"actions\">\r\n       \r\n    </div>\r\n   \r\n</div>    \r\n\r\n         \r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default Developer;","E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHeader.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestCard.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\questionpage.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\auth.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\users.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\contests.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\TopPerformersSlide.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\LoginSlide.js",["208"],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\ContestSlide.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\contact.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\users.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\components\\underconstruction.js",[],["209","210"],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\about.js",[],"E:\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\about.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":1,"column":15,"nodeType":"217","messageId":"218","endLine":1,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":165,"column":21,"nodeType":"222","endLine":165,"endColumn":79},{"ruleId":"220","severity":1,"message":"221","line":172,"column":21,"nodeType":"222","endLine":172,"endColumn":69},{"ruleId":"220","severity":1,"message":"221","line":231,"column":21,"nodeType":"222","endLine":231,"endColumn":69},{"ruleId":"215","severity":1,"message":"223","line":25,"column":8,"nodeType":"217","messageId":"218","endLine":25,"endColumn":14},{"ruleId":"215","severity":1,"message":"224","line":70,"column":10,"nodeType":"217","messageId":"218","endLine":70,"endColumn":24},{"ruleId":"215","severity":1,"message":"225","line":70,"column":26,"nodeType":"217","messageId":"218","endLine":70,"endColumn":43},{"ruleId":"215","severity":1,"message":"226","line":74,"column":20,"nodeType":"217","messageId":"218","endLine":74,"endColumn":31},{"ruleId":"215","severity":1,"message":"227","line":78,"column":10,"nodeType":"217","messageId":"218","endLine":78,"endColumn":20},{"ruleId":"215","severity":1,"message":"228","line":78,"column":22,"nodeType":"217","messageId":"218","endLine":78,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":97,"column":3,"nodeType":"231","messageId":"232","endLine":97,"endColumn":19,"fix":"233"},{"ruleId":"234","severity":1,"message":"235","line":99,"column":5,"nodeType":"236","endLine":99,"endColumn":7,"suggestions":"237"},{"ruleId":"234","severity":1,"message":"238","line":136,"column":6,"nodeType":"236","endLine":136,"endColumn":8,"suggestions":"239"},{"ruleId":"215","severity":1,"message":"240","line":70,"column":10,"nodeType":"217","messageId":"218","endLine":70,"endColumn":15},{"ruleId":"215","severity":1,"message":"241","line":70,"column":17,"nodeType":"217","messageId":"218","endLine":70,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":198,"column":21,"nodeType":"222","endLine":198,"endColumn":55},{"ruleId":"244","severity":1,"message":"245","line":47,"column":11,"nodeType":"222","endLine":52,"endColumn":12},{"ruleId":"215","severity":1,"message":"216","line":1,"column":15,"nodeType":"217","messageId":"218","endLine":1,"endColumn":23},{"ruleId":"215","severity":1,"message":"246","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":14},{"ruleId":"215","severity":1,"message":"247","line":6,"column":13,"nodeType":"217","messageId":"218","endLine":6,"endColumn":20},{"ruleId":"215","severity":1,"message":"248","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":15},{"ruleId":"215","severity":1,"message":"249","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":13},{"ruleId":"215","severity":1,"message":"247","line":4,"column":13,"nodeType":"217","messageId":"218","endLine":4,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":14,"column":15,"nodeType":"222","endLine":14,"endColumn":41},{"ruleId":"242","severity":1,"message":"243","line":10,"column":7,"nodeType":"222","endLine":10,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":8,"column":12,"nodeType":"222","endLine":8,"endColumn":36},{"ruleId":"242","severity":1,"message":"243","line":11,"column":7,"nodeType":"222","endLine":11,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"211","replacedBy":"250"},{"ruleId":"213","replacedBy":"251"},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LoginModal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'aayush' is defined but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'setTickicon' is assigned a value but never used.","'savedindex' is assigned a value but never used.","'setSavedindex' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property useEffect.","MemberExpression","unexpectedWhitespace",{"range":"254","text":"255"},"react-hooks/exhaustive-deps","React Hook React. useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React. useEffect.","ArrayExpression",["256"],"React Hook useEffect has a missing dependency: 'handlePostQuestions'. Either include it or remove the dependency array.",["257"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Link' is defined but never used.","'actions' is defined but never used.","'Divider' is defined but never used.","'image' is defined but never used.",["252"],["253"],"no-global-assign","no-unsafe-negation",[3215,3217],".",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [props]",{"range":"262","text":"263"},"Update the dependencies array to be: [handlePostQuestions]",{"range":"264","text":"265"},[3284,3286],"[props]",[4452,4454],"[handlePostQuestions]"]