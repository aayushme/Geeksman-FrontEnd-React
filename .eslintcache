[{"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\index.js":"1","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\serviceWorker.js":"2","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\App.js":"3","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\auth.js":"4","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\MainLayout.js":"5","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\utility.js":"6","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\actionsTypes.js":"7","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\About.js":"8","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Practice.js":"9","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\NotFound.js":"10","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\loginpage.js":"11","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\Contests.js":"12","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomePage.js":"13","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\Ace.js":"14","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Navbar.js":"15","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHomeProblem.js":"16","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHeader.js":"17","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestsHome.js":"18","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestProblems.js":"19","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\index.js":"20","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHome.js":"21","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestProblem.js":"22","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomepageCarousel.js":"23","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceUserPreferences.js":"24","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceOptions.js":"25","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\modals\\modal.js":"26","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\auth.js":"27","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestCard.js":"28","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\ContestSlide.js":"29","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\LoginSlide.js":"30","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\TopPerformersSlide.js":"31","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceThemes.js":"32","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceLanguages.js":"33","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\Problem.js":"34","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\ProblemSubsection.js":"35","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\ProblemSubsectionForSampleIO.js":"36","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\questionpage\\Questiondrawer.js":"37","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\userpanel.js":"38","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\Participation.js":"39","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\About-memberscard.js":"40","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\Developers-card.js":"41"},{"size":1155,"mtime":1610131530856,"results":"42","hashOfConfig":"43"},{"size":5086,"mtime":1610131530856,"results":"44","hashOfConfig":"43"},{"size":231,"mtime":1610131530824,"results":"45","hashOfConfig":"43"},{"size":1495,"mtime":1610131530856,"results":"46","hashOfConfig":"43"},{"size":1323,"mtime":1610287482119,"results":"47","hashOfConfig":"43"},{"size":133,"mtime":1610131530856,"results":"48","hashOfConfig":"43"},{"size":235,"mtime":1610175035526,"results":"49","hashOfConfig":"43"},{"size":2574,"mtime":1610645497844,"results":"50","hashOfConfig":"43"},{"size":1889,"mtime":1610131530840,"results":"51","hashOfConfig":"43"},{"size":13263,"mtime":1610645792097,"results":"52","hashOfConfig":"43"},{"size":3607,"mtime":1610131530824,"results":"53","hashOfConfig":"43"},{"size":887,"mtime":1610131530824,"results":"54","hashOfConfig":"43"},{"size":548,"mtime":1610131530824,"results":"55","hashOfConfig":"43"},{"size":2669,"mtime":1610131530824,"results":"56","hashOfConfig":"43"},{"size":1718,"mtime":1610131530840,"results":"57","hashOfConfig":"43"},{"size":998,"mtime":1610131530824,"results":"58","hashOfConfig":"43"},{"size":185,"mtime":1610131530824,"results":"59","hashOfConfig":"43"},{"size":3057,"mtime":1610131530824,"results":"60","hashOfConfig":"43"},{"size":712,"mtime":1610131530824,"results":"61","hashOfConfig":"43"},{"size":79,"mtime":1610131530856,"results":"62","hashOfConfig":"43"},{"size":1775,"mtime":1610131530824,"results":"63","hashOfConfig":"43"},{"size":593,"mtime":1610131530824,"results":"64","hashOfConfig":"43"},{"size":854,"mtime":1610131530824,"results":"65","hashOfConfig":"43"},{"size":2091,"mtime":1610131530824,"results":"66","hashOfConfig":"43"},{"size":3829,"mtime":1610131530824,"results":"67","hashOfConfig":"43"},{"size":1225,"mtime":1610131530840,"results":"68","hashOfConfig":"43"},{"size":2779,"mtime":1610175333295,"results":"69","hashOfConfig":"43"},{"size":1037,"mtime":1610131530824,"results":"70","hashOfConfig":"43"},{"size":614,"mtime":1610131530824,"results":"71","hashOfConfig":"43"},{"size":972,"mtime":1610131530824,"results":"72","hashOfConfig":"43"},{"size":1300,"mtime":1610131530824,"results":"73","hashOfConfig":"43"},{"size":2590,"mtime":1610131530824,"results":"74","hashOfConfig":"43"},{"size":5086,"mtime":1610131530824,"results":"75","hashOfConfig":"43"},{"size":2144,"mtime":1610131530840,"results":"76","hashOfConfig":"43"},{"size":347,"mtime":1610131530840,"results":"77","hashOfConfig":"43"},{"size":407,"mtime":1610131530840,"results":"78","hashOfConfig":"43"},{"size":8292,"mtime":1610201493112,"results":"79","hashOfConfig":"43"},{"size":8585,"mtime":1610299021613,"results":"80","hashOfConfig":"43"},{"size":635,"mtime":1610298771114,"results":"81","hashOfConfig":"43"},{"size":928,"mtime":1610642510170,"results":"82","hashOfConfig":"43"},{"size":828,"mtime":1610641916092,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"cpvshu",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\index.js",[],["176","177"],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\serviceWorker.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\App.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\reducers\\auth.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\MainLayout.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\utility.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\actionsTypes.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\About.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Practice.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\NotFound.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\loginpage.js",["178"],"import React, { Component } from \"react\";\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginPage extends Component {\r\n\r\n  state={\r\n    activeClass : 'container',\r\n    email:'',\r\n    password:'',\r\n    newemail:'',\r\n    newpassword:'',\r\n    validatenewpassword:'',\r\n    name:''\r\n  }\r\n\r\n\r\n    signInShow = (e) =>{\r\n      e.preventDefault();\r\n      this.setState({activeClass:'container'});\r\n    }\r\n\r\n    signUpShow = (e) =>{\r\n      e.preventDefault();\r\n      this.setState({activeClass:'container right-panel-active'});\r\n    }\r\n\r\n    setLogin = (e) =>{\r\n      e.preventDefault();\r\n      console.log(process.env.PUBLIC_API_URL);\r\n      this.props.reduxLogin(this.state.email,this.state.password);\r\n    }\r\n\r\n    setSignup = (e) =>{\r\n\r\n      e.preventDefault();\r\n\r\n      if(this.state.validatenewpassword===this.state.newpassword){\r\n        this.props.reduxSignup(this.state.name,this.state.newemail,this.state.newpassword);\r\n      }\r\n      else{\r\n        console.log(\"Password Not Same\");\r\n      }\r\n      \r\n    }\r\n\r\n\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <>\r\n        \r\n        <div className={this.state.activeClass} id=\"container\">\r\n          <div class=\"form-container sign-up-container\">\r\n            <form action=\"#\" className=\"login-signup\">\r\n              <h1>Create Account</h1>\r\n             \r\n              <span>Use your email for registration</span>\r\n              <input type=\"text\" placeholder=\"Name\" />\r\n              <input type=\"email\" placeholder=\"Email\" />\r\n              <input type=\"password\" placeholder=\"Password\" />\r\n              <input type=\"password\" placeholder=\"Confirm Password\" />\r\n              <button className=\"login-button\" onSubmit={e => this.setSignup(e)}>Sign Up</button>\r\n            </form>\r\n          </div>\r\n          <div class=\"form-container sign-in-container\">\r\n            <form className=\"login-signup\" onSubmit={e => this.setLogin(e)}>\r\n              <h1>Sign in</h1>\r\n              <input type=\"email\" placeholder=\"Email\" />\r\n              <input type=\"password\" placeholder=\"Password\" />\r\n              <a href=\"#\">Forgot your password?</a>\r\n              <button className=\"login-button\" >Sign In</button>\r\n            </form>\r\n          </div>\r\n          <div class=\"overlay-container\">\r\n            <div class=\"overlay\">\r\n              <div class=\"overlay-panel overlay-left\">\r\n                <h1>Welcome Back!</h1>\r\n                <p>\r\n                  To keep connected with us please login with your personal info\r\n                </p>\r\n                <button class=\"ghost login-button\" onClick = {e=> this.signInShow(e)}>\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n              <div class=\"overlay-panel overlay-right\">\r\n                <h1>Hello, Geek!</h1>\r\n                <p>Enter your personal details and start journey with us</p>\r\n                <button class=\"ghost login-button\" onClick={ e => this.signUpShow(e)} >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    reduxLogin: (email, password) => {\r\n      dispatch(actions.reduxLogin(email, password));\r\n    },\r\n    reduxSignup: (name, newemail,newpassword) => {\r\n      dispatch(actions.reduxSignup(name,newemail, newpassword));\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\Contests.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomePage.js",["179","180"],"import React,{useState} from 'react';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport Navbar from '../Navbar';\r\nimport HomepageCarousel from './HomepageCarousel';\r\nimport LoginModal from '../utils/modals/modal';\r\n// import Footer from './Footer';\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <div className=\"homepage\">\r\n            <Navbar />\r\n            <HomepageCarousel />\r\n\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\Ace.js",["181"],"import React, { useState } from \"react\";\r\nimport {FullScreen}  from \"react-full-screen\";\r\nimport AceEditor from \"react-ace\";\r\nimport AceOptions from './AceOptions';\r\nimport AceUserPreferences from './AceUserPreferences';\r\nimport 'brace/ext/language_tools'; // for autocompletion\r\n\r\nvar updateTimeoutHandle; // needs to be declared outside Ace function\r\n\r\nconst Ace = () => {\r\n    const [theme, setTheme] = useState(() => localStorage.getItem('editorTheme') ? localStorage.getItem('editorTheme') : 'monokai');\r\n    const [language, setLanguage] = useState(() => localStorage.getItem('editorLanguage') ? localStorage.getItem('editorLanguage') : 'cpp');\r\n    const [fontSize, setFontSize] = useState(() => localStorage.getItem('editorFontSize') ? parseInt(localStorage.getItem('editorFontSize')) : 14);\r\n    const [isFull, setIsFull] = useState(false);\r\n    const [editorHeight, setEditorHeight] = useState('500px');\r\n\r\n    const updateUserCode = (newValue) => {\r\n        // key: <contestId-problem-id-language>, value: code\r\n        localStorage.setItem('contest0-problem0-' + language, newValue);\r\n        console.log('code updated.');\r\n    }\r\n\r\n    const onChange = (newValue) => {\r\n        clearTimeout(updateTimeoutHandle);\r\n        updateTimeoutHandle = setTimeout(() => { updateUserCode(newValue) }, 500);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <div className=\"ace-container\">\r\n                    <AceUserPreferences theme={theme} setTheme={setTheme} language={language} setLanguage={setLanguage} fontSize={fontSize} setFontSize={setFontSize} isFull={isFull} setIsFull={setIsFull} editorHeight={editorHeight} setEditorHeight={setEditorHeight} />\r\n                    <AceEditor\r\n                        value={localStorage.getItem('contest0-problem0-' + language) ? localStorage.getItem('contest0-problem0-' + language) : ''}\r\n                        mode={((language === 'c' || language === 'cpp') ? 'c_cpp' : language)}\r\n                        theme={theme}\r\n                        fontSize={fontSize}\r\n                        height={editorHeight}\r\n                        width={'100%'}\r\n                        onChange={onChange}\r\n                        editorProps={{ $blockScrolling: Infinity }}\r\n                        {...AceOptions}\r\n                    />\r\n                </div>\r\n           \r\n            <div className=\"editor-buttons-container\">\r\n                <input className=\"editor-button compile-and-run\" type=\"button\" value=\"Compile and Run\" />\r\n                <input className=\"editor-button submit\" type=\"button\" value=\"Submit\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ace;\r\n\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Navbar.js",["182","183","184"],"import React,{useState} from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport Geeksman from './images/png/geeksman.png'\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const[login,setlogin]=useState(false);\r\n\r\n    return (\r\n        \r\n        <nav className=\"navbar navbar-expand-md\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-logo navbar-brand\" to=\"/\">\r\n                    <img alt=\"svgImg\" width=\"48px\" src={Geeksman} />\r\n                    GeeksCode\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item active\" >\r\n                            <NavLink className=\"nav-link\" to=\"/practice\" >Practice</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" >\r\n                            <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" >\r\n                            <NavLink className=\"nav-link  \" to=\"/about\">About</NavLink>\r\n                        </li>\r\n                        \r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHomeProblem.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHeader.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestsHome.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestProblems.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\index.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestHome.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestProblem.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\HomepageCarousel.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceUserPreferences.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceOptions.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\modals\\modal.js",["185"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\n\r\nclass LoginModal extends Component {\r\n\r\n  state={\r\n    modal:localStorage.getItem(\"LoginModal\"),\r\n  }\r\n\r\n  toggle = (e) =>{\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n    this.setState({modal:false});\r\n    localStorage.setItem(\"LoginModal\",false);\r\n  }\r\n  \r\n  render(){\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen={this.state.modal}  size=\"lg\">\r\n        <MDBModalHeader >MDBModal title</MDBModalHeader>\r\n        <MDBModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat.\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"secondary\" onClick={this.toggle}>\r\n            Close\r\n          </MDBBtn>\r\n          <MDBBtn color=\"primary\">Save changes</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n}\r\n}\r\n\r\nexport default LoginModal;\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\store\\actions\\auth.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Contest\\ContestCard.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\ContestSlide.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\LoginSlide.js",["186","187"],"import React, { Component, useState } from \"react\";\r\nimport LoginModal from \"../utils/modals/modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass LoginSlide extends Component {\r\n  state = {\r\n    show: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"login-slide container-fluid\">\r\n          <div className=\"login-slide-text-content\">\r\n            <h1>Geeksman - The Coding Society</h1>\r\n            <br />\r\n            Join the <strong>Competitive Coding Society</strong> of JCBOSE UST{\" \"}\r\n            <br />\r\n            Practice coding, prepare for contests, and win challenges.\r\n          </div>\r\n          <div className=\"login-buttons\">\r\n            <Link className=\"login-button\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n            <Link className=\"login-button\" to=\"/login\">\r\n              SignUp\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginSlide;\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\HomePage\\TopPerformersSlide.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceThemes.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Ace\\AceLanguages.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\Problem.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\ProblemSubsection.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\Problem\\ProblemSubsectionForSampleIO.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\questionpage\\Questiondrawer.js",["188","189"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport QuestionIcon from \"@material-ui/icons/QuestionAnswerTwoTone\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from '@material-ui/core/Button'\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [selectedindex, setselected] = React.useState(0);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const [questions, setquestions] = React.useState([\r\n    {\r\n      questionno: \"Question1\",\r\n      question: \"what ifadsfasdfadsfads\",\r\n      options: {\r\n        option1: \"are you ok1\",\r\n        option2: \"are you ok2\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n\r\n    {\r\n      questionno: \"Question2\",\r\n      question: \"what isflkadslflkamsdlkflk\",\r\n      options: {\r\n        option1: \"are you ok1\",\r\n        option2: \"are you ok2\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n    {\r\n      questionno: \"Question3\",\r\n      question: \"what is the ans wow\",\r\n      options: {\r\n        option1: \"are you ok1\",\r\n        option2: \"are you ok2\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n    {\r\n      questionno: \"Question4\",\r\n      question: \"what is tafalksdjlfjlasd\",\r\n      options: {\r\n        option1: \"are you ok1\",\r\n        option2: \"are you ok2\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n    {\r\n      questionno: \"Question5\",\r\n      question: \"what is tfakjsdfjajsdl\",\r\n      options: {\r\n        option1: \"are you ok1\",\r\n        option2: \"are you ok2\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n    {\r\n      questionno: \"Question6\",\r\n      question: \"what is fakjdsfljsd\",\r\n      options: {\r\n        option1: \"are you ok13532\",\r\n        option2: \"are you ok2523\",\r\n        option3: \"are you ok3\",\r\n        option4: \"are you ok4\",\r\n      },\r\n    },\r\n  ]);\r\n  const [activequestion, setactivequestion] = React.useState(questions[0]);\r\n\r\n  const [value, setValue] = React.useState(\"female\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {questions.map((questions, index) => (\r\n          <React.Fragment>\r\n            <ListItem\r\n              button\r\n              alignItems=\"center\"\r\n              selected={selectedindex === index}\r\n              key={questions.questionno}\r\n              onClick={() => {\r\n                setactivequestion(questions);\r\n                setselected(index);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                {\" \"}\r\n                <QuestionIcon />{\" \"}\r\n              </ListItemIcon>\r\n              <ListItemText center primary={questions.questionno} />\r\n            </ListItem>\r\n            <Divider />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            \r\n            <div className=\"questionpageheader\">\r\n              <div className=\"timeinfo\">\r\n              <span>00hr 00min</span>\r\n              </div>\r\n             \r\n              <div className=\"prevnextbtn\">\r\n                <Button color=\"danger\">&larr; prev</Button>\r\n                <Button color=\"danger\">next &rarr;</Button>\r\n              </div>\r\n            </div>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph>\r\n          <div className=\"mainquestion\">\r\n            <p>\r\n              <span>Question: </span>\r\n              {activequestion.question}\r\n            </p>\r\n          </div>\r\n          <div className=\"optionsselect\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={value}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"female\"\r\n                  control={<Radio />}\r\n                  label={activequestion.options.option1}\r\n                />\r\n                <FormControlLabel\r\n                  value=\"male\"\r\n                  control={<Radio />}\r\n                  label={activequestion.options.option2}\r\n                />\r\n                <FormControlLabel\r\n                  value=\"other\"\r\n                  control={<Radio />}\r\n                  label={activequestion.options.option3}\r\n                />\r\n                <FormControlLabel\r\n                  value=\"disabled\"\r\n                  control={<Radio />}\r\n                  label={activequestion.options.option3}\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\userpanel.js",["190","191","192","193"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ProfileIcon from \"@material-ui/icons/AccountBox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Participation from \"./Participation\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction UserPanel(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [contests, setcontests] = React.useState([\r\n    {\r\n      contestname: \"Code Fury\",\r\n      rank: \"4/50\",\r\n      points: \"400/500\",\r\n    },\r\n    {\r\n      contestname: \"Code Kedan\",\r\n      rank: \"4/50\",\r\n      points: \"100/500\",\r\n    },\r\n    {\r\n      contestname: \"Audition round\",\r\n      rank: \"5/50\",\r\n      points: \"300/500\",\r\n    },\r\n  ]);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const [selectedbtn, setselectedbtn] = React.useState(\"homebtn\");\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            setselectedbtn(\"homebtn\");\r\n          }}\r\n          selected={selectedbtn === \"homebtn\"}\r\n        >\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            setselectedbtn(\"updateprofile\");\r\n          }}\r\n          selected={selectedbtn === \"updateprofile\"}\r\n        >\r\n          <ListItemIcon>\r\n            <ProfileIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"UpdateProfile\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className=\"headinginfo\">\r\n            <h5>Welcome,</h5>\r\n            Parag Thakur\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography>\r\n          {selectedbtn === \"homebtn\" && (\r\n            <div className=\"aboutuser\">\r\n              <div className=\"userinfo\">\r\n                <div className=\"userimagebox\">\r\n                  <Avatar className=\"styleimage\"></Avatar>\r\n                </div>\r\n                <div className=\"userinfobox\">\r\n                  <div className=\"nameinfo\">\r\n                    <h3>Parag Thakur</h3>\r\n                  </div>\r\n                  <div className=\"collegeinfo\">\r\n                    <span>\r\n                      Studying at YMCA University of Science and Technology -\r\n                      Faridabad\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"skillsinfo\">\r\n                    <h4>\r\n                      Skills: <span>C++,Python</span>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"educationinfo\">\r\n                    <h4>\r\n                      Education:{\" \"}\r\n                      <span>\r\n                        YMCA University of Science and Technology - Faridabad\r\n                      </span>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"participationinfo\">\r\n                <div className=\"participationheading\">\r\n                  <h2 className=\"participationheadingstyle\">Participation:</h2>\r\n                </div>\r\n                <div className=\"contestinfocards\">\r\n                  {(contests.length ===0)\r\n                    &&(\r\n                      <h3>\r\n                        You haven't participated in any contest uptil now!!\r\n                      </h3>\r\n                    )}\r\n                  {contests.length != 0 &&\r\n                    contests.map((contest) => (\r\n                      <Participation\r\n                        contestname={contest.contestname}\r\n                        rank={contest.rank}\r\n                        marks={contest.points}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedbtn === \"updateprofile\" && (\r\n            <div>\r\n              <div className=\"mainupdate\">\r\n                <h1>Update Profile</h1>\r\n              </div>\r\n              <div className=\"updateform\">\r\n                <Form>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Update\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPanel;\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\userpanel\\Participation.js",["194"],"import React from 'react'\r\nimport Divider from \"@material-ui/core/Divider\";\r\nfunction Participation({contestname,rank,marks}) {\r\n    return (\r\n        <div className=\"participationcard\">\r\n            <div className=\"upperhalf\">\r\n              <h4>{contestname}</h4>\r\n            </div>\r\n            \r\n            <div className=\"lowerhalf\">\r\n              <div className=\"rankinfo\">\r\n                Rank:<span>{rank}</span>\r\n              </div>\r\n              <div className=\"marksinfo\">\r\n                Marks:<span>{marks}</span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Participation\r\n","C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\About-memberscard.js",[],"C:\\Users\\Parag Thakur\\Downloads\\Web dev projects\\geeksman-latest\\frontend\\GeeksMan-2k21-FrontEnd\\src\\components\\utils\\Developers-card.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":72,"column":15,"nodeType":"201","endLine":72,"endColumn":27},{"ruleId":"202","severity":1,"message":"203","line":1,"column":15,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"206","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":18},{"ruleId":"202","severity":1,"message":"207","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"209","line":9,"column":11,"nodeType":"204","messageId":"205","endLine":9,"endColumn":16},{"ruleId":"202","severity":1,"message":"210","line":9,"column":17,"nodeType":"204","messageId":"205","endLine":9,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"203","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":18},{"ruleId":"202","severity":1,"message":"211","line":21,"column":8,"nodeType":"204","messageId":"205","endLine":21,"endColumn":17},{"ruleId":"202","severity":1,"message":"212","line":67,"column":21,"nodeType":"204","messageId":"205","endLine":67,"endColumn":33},{"ruleId":"202","severity":1,"message":"213","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"214","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":17},{"ruleId":"202","severity":1,"message":"215","line":64,"column":20,"nodeType":"204","messageId":"205","endLine":64,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":218,"column":36,"nodeType":"218","messageId":"219","endLine":218,"endColumn":38},{"ruleId":"202","severity":1,"message":"220","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":15},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LoginModal' is defined but never used.","'FullScreen' is defined but never used.","'Button' is defined but never used.","'login' is assigned a value but never used.","'setlogin' is assigned a value but never used.","'FormLabel' is defined but never used.","'setquestions' is assigned a value but never used.","'PropTypes' is defined but never used.","'InboxIcon' is defined but never used.","'setcontests' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]