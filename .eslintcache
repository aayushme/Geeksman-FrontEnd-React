[{"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/index.js":"1","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/App.js":"2","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/serviceWorker.js":"3","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/auth.js":"4","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/questionpage.js":"5","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/users.js":"6","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/contest.js":"7","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/about.js":"8","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/MainLayout.js":"9","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/utility.js":"10","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/actionsTypes.js":"11","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/About.js":"12","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/NotFound.js":"13","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/contact.js":"14","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/index.js":"15","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/HomePage.js":"16","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/Contests.js":"17","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/loginpage.js":"18","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/userpanel/userpanel.js":"19","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Loader/Loader.js":"20","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Navbar.js":"21","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/questionpage.js":"22","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/auth.js":"23","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/contests.js":"24","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/about.js":"25","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/users.js":"26","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/Developers-card.js":"27","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/events.js":"28","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/coordinators.js":"29","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/About-memberscard.js":"30","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/HomepageCarousel.js":"31","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestsHome.js":"32","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestHome.js":"33","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/spinner.js":"34","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/userpanel/Participation.js":"35","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/modals/modal.js":"36","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/questionpage/Questiondrawer.js":"37","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/LoginSlide.js":"38","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/TopPerformersSlide.js":"39","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/ContestSlide.js":"40","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestHeader.js":"41","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestCard.js":"42"},{"size":1342,"mtime":1622564655526,"results":"43","hashOfConfig":"44"},{"size":183,"mtime":1621878876086,"results":"45","hashOfConfig":"44"},{"size":4951,"mtime":1621878876106,"results":"46","hashOfConfig":"44"},{"size":2077,"mtime":1622570912265,"results":"47","hashOfConfig":"44"},{"size":1753,"mtime":1621878876106,"results":"48","hashOfConfig":"44"},{"size":3100,"mtime":1621878876106,"results":"49","hashOfConfig":"44"},{"size":2852,"mtime":1621878876106,"results":"50","hashOfConfig":"44"},{"size":1136,"mtime":1621878876106,"results":"51","hashOfConfig":"44"},{"size":2432,"mtime":1622568835479,"results":"52","hashOfConfig":"44"},{"size":127,"mtime":1621878876106,"results":"53","hashOfConfig":"44"},{"size":1833,"mtime":1621878876106,"results":"54","hashOfConfig":"44"},{"size":13261,"mtime":1621878876086,"results":"55","hashOfConfig":"44"},{"size":13127,"mtime":1621878876086,"results":"56","hashOfConfig":"44"},{"size":112,"mtime":1621878876086,"results":"57","hashOfConfig":"44"},{"size":341,"mtime":1622571103352,"results":"58","hashOfConfig":"44"},{"size":528,"mtime":1621878876086,"results":"59","hashOfConfig":"44"},{"size":1660,"mtime":1621878876086,"results":"60","hashOfConfig":"44"},{"size":9065,"mtime":1621878876086,"results":"61","hashOfConfig":"44"},{"size":10882,"mtime":1621878876102,"results":"62","hashOfConfig":"44"},{"size":337,"mtime":1621878876086,"results":"63","hashOfConfig":"44"},{"size":3537,"mtime":1622571261083,"results":"64","hashOfConfig":"44"},{"size":2268,"mtime":1621878876106,"results":"65","hashOfConfig":"44"},{"size":2471,"mtime":1622570594634,"results":"66","hashOfConfig":"44"},{"size":3321,"mtime":1621878876106,"results":"67","hashOfConfig":"44"},{"size":795,"mtime":1621878876106,"results":"68","hashOfConfig":"44"},{"size":3491,"mtime":1622572402722,"results":"69","hashOfConfig":"44"},{"size":452,"mtime":1621878876102,"results":"70","hashOfConfig":"44"},{"size":810,"mtime":1621878876102,"results":"71","hashOfConfig":"44"},{"size":508,"mtime":1621878876102,"results":"72","hashOfConfig":"44"},{"size":1668,"mtime":1621878876102,"results":"73","hashOfConfig":"44"},{"size":1412,"mtime":1621878876086,"results":"74","hashOfConfig":"44"},{"size":1655,"mtime":1621878876086,"results":"75","hashOfConfig":"44"},{"size":4092,"mtime":1621878876086,"results":"76","hashOfConfig":"44"},{"size":162,"mtime":1621878876106,"results":"77","hashOfConfig":"44"},{"size":613,"mtime":1621878876102,"results":"78","hashOfConfig":"44"},{"size":2391,"mtime":1621878876106,"results":"79","hashOfConfig":"44"},{"size":14847,"mtime":1621878876102,"results":"80","hashOfConfig":"44"},{"size":1145,"mtime":1621878876086,"results":"81","hashOfConfig":"44"},{"size":1271,"mtime":1621878876086,"results":"82","hashOfConfig":"44"},{"size":640,"mtime":1621878876086,"results":"83","hashOfConfig":"44"},{"size":177,"mtime":1621878876086,"results":"84","hashOfConfig":"44"},{"size":4144,"mtime":1621878876086,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1bh3mr7",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/index.js",[],["186","187"],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/App.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/serviceWorker.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/auth.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/questionpage.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/users.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/contest.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/reducers/about.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/MainLayout.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/utility.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/actionsTypes.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/About.js",["188"],"import React from \"react\";\nimport \"./utils/utils.css\";\nimport image from \"./images/image.jpeg\";\nimport MemberCard from \"./utils/About-memberscard\";\nimport DevCard from \"./utils/Developers-card\";\nimport Navbar from \"./Navbar\";\nimport Coordinators from \"./utils/coordinators\";\nimport Events from \"./utils/events\";\nimport image1 from \"./images/png/komal bhatia.jpg\";\nimport image2 from \"./images/png/neelam.jpeg\";\nimport bbop from \"./images/png/bbop.png\";\nimport geeky from \"./images/png/geekymondays.jpg\";\nimport machine from \"./images/png/machine.jpg\";\nimport deepdive from \"./images/png/deepdive.PNG\";\nimport codef2 from \"./images/png/codefury2.png\";\nimport codef3 from \"./images/png/codefury3.PNG\";\nimport pecfest from \"./images/png/pecfest.PNG\";\nimport acstreak from \"./images/png/acstreak.PNG\";\nimport Aayush from './images/png/aayush.jpg'\nimport Dinesh from './images/png/dinesh.jpg'\nimport Vineet from './images/png/vineet.PNG'\nimport nitika from './images/png/nitika.PNG'\nimport rishabh from './images/png/rishabh.PNG'\nimport ritik from './images/png/ritik.PNG'\nimport sahil from './images/png/sahil singla.jpg'\nimport trilok from './images/png/trilok kaushik.jpg'\nimport manmeet from './images/png/manmeet.jpg'\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst About = (props) => {\n  React.useEffect(() => {\n    props.getMember();\n  });\n  return (\n    <div className=\"aboutpage\">\n      <div className=\"about-navbar-part\">\n        <Navbar />\n      </div>\n      <div className=\"about__us-head\">\n        <h1>About Us</h1>\n        <span>\n          This is our team, a lot of smiling happy people who work hard to\n          empower geeksman.\n        </span>\n      </div>\n\n      <div className=\"video-text-part\">\n        <div className=\"videoarea\">\n          <iframe\n            src=\"https://www.youtube.com/embed/_0cfRsPI4xQ\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n        </div>\n        <div className=\"textpart\">\n          <p>\n            Well, our name tells all about us, we are the geeks, who love to\n            code!!. Infact,we bleed code! Sounds geeky ? Welcome to Geeksman,\n            official coding club of JCBUST, Faridabad. Geeksman is all about\n            nourishing your coding skills and is highly biased towards promoting\n            coding culture in the campus. Previously it was a part of Codechef\n            campus chapter later on it has been approved as an official coding\n            club of YMCA. Coding Contests, Hackathons are the primary siblings\n            of Geeksman.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"events__heading\">\n        <h1>Our Events</h1>\n      </div>\n      <div className=\"events__content\">\n        <Events\n          image={bbop}\n          eventname={\"Building Blocks Of Programming\"}\n          description={\n            \"Geeksman, the official coding society of The Department of Computer Engineering of JC Bose University of Science and Technology under TEQIP-III conducted the inauguration ceremony of an extraordinary value added course BUILDING BLOCKS OF PROGRAMMING one of the biggest event of 2021. The ceremony was inaugurated by Professor Dinesh Kumar the Vice Chancellor of JC BOSE UST, YMCA in the presence of Professor Sunil Kumar Garg, Worthy Registrar JCBOSE UST, YMCA , Professor Komal Kumar Bhatia, dean department of Informatics and Computing\"\n          }\n          date={\"11 January - 25 January 2021\"}\n        />\n        <Events\n          image={geeky}\n          eventname={\"Geeky Mondays\"}\n          description={\n            \"𝐆𝐞𝐞𝐤𝐲 𝐌𝐨𝐧𝐝𝐚𝐲𝐬: 𝐓𝐡𝐞 𝐞𝐯𝐞𝐧𝐭 𝐛𝐲 𝐆𝐞𝐞𝐤𝐬𝐌𝐚𝐧 𝐭𝐨 𝐭𝐞𝐬𝐭 𝐜𝐨𝐝𝐢𝐧𝐠 𝐬𝐤𝐢𝐥𝐥𝐬 𝐨𝐟 𝐬𝐭𝐮𝐝𝐞𝐧𝐭𝐬 Geeksman, the technical coding club of J. C. Bose University of Science and Technology, YMCA has started Geeky Mondays during Jan-Feb 2021, a series of Questionnaire to try and test coding skills and knowledge of students of the university. Questions will be posted every Monday on Instagram handle of GeeksMan. The lucky geeks will get featured on the official page of Geeksman society!!\"\n          }\n          date={\"4 January - 22 February 2021\"}\n        />\n        <Events\n          image={codef2}\n          eventname={\"code Fury 2.0\"}\n          description={\n            \"GEEKSMAN, The Technical club of CE department always focuses on encouraging students to code, so to encourage this, GeeksMan conducted a contest Code Fury 2.0Code Fury 2.0 is the signature event of GeeksMan. This time Code Fury was specially designed for First Year students. The event took place on Hacker Rank on 27 June 2020 at 9 PM till 12 AM. The event had huge participation of the newbies. \"\n          }\n          date={\"27 June 2020\"}\n        />\n        <Events\n          image={machine}\n          eventname={\"Machine Learning Session\"}\n          description={\n            \"GeeksMan, the Technical club of CE department of JC BOSE University of Science and Technology YMCA, Faridabad, believes in developing skills because only skills can remain with us till the end, so to gain skills GeeksMan conducted a workshop on how to make computer sound like a person with text being auto-generated. In this session, students made a small project that didn’t use neural networks to generate text, rather used Yelp Reviews to generate new reviews using Markov Chains. \"\n          }\n          date={\"19 September 2019\"}\n        />\n        <Events\n          image={codef3}\n          eventname={\"code Fury 3.0\"}\n          description={\n            \"Programming isn't about what you know; it's about what you can figure out.” *‼️Greetings Coders‼️Quarentine has been a great opportunity for learners to lift up their skills. But what is the use, if you can't show and perform with them??To test and show your coding skills, *Geeksman*, the official technical club of CE department of *JC Bose University of science and technology, YMCA*, with immense pleasure brings to you a adrenaline - fueled coding battle aka *CODEFURY 3.0* where coders compete to solve problems and win exciting prizes.\"\n          }\n          date={\"6 September 2020\"}\n        />\n        <Events\n          image={deepdive}\n          eventname={\"Deep Dive Into Graphs\"}\n          description={\n            \"Event began with the motivational speech of honourable V.C. sir, Prof. Dinesh Kumar. Mr. Pranav Khandelwal and Jatin Virmani were mentors of that event.Our department’s chairman Dr.Komal Bhatia and club Co-ordinator Dr.Neelam Duhan were also there to guide students with their high experienceThis informative session started with basics of graphs and some standard problems were discussed. More than 100 students attended the event and they were really appreciating the event.Those students who answered correctly to the questions asked by mentors were appreciated by giving them goodies(t-shirts,pens,etc.) by our club\"\n          }\n          date={\"23 October 2020\"}\n        />\n        <Events\n          image={pecfest}\n          eventname={\"PecFest\"}\n          description={\n            \"Geeksman (Technical club of Computer Department), mark their presence in the technical fest of Punjab Engineering College (PEC), Chandigarh by getting selected for the hackathon in online screening round. PECFEST was held on 8th November,2019 – 10th November,2019.10 members from the club take part and represent our university in different events held there and even won the third position in the hackathon held there.They provide us chargeable accommodation, food, etc. for three days.\"\n          }\n          date={\"6 November 2019\"}\n        />\n        <Events\n          image={acstreak}\n          eventname={\"AC Streak\"}\n          description={\n            \"GeeksMan, the technical club of Computer Engineering department of J.C. Bose University of Science and Technology YMCA, Faridabad organized an intra college coding contest AC STREAK on 12th January 2020. The prime motive was to let the newbies showcase their programming skills and boost their confidence. Students showed their great interest and put their efforts to crack and win the contest. Many students participated in the contest out of which Sanyam from CE 2nd year and Kushagra from CE 1st year secured 1st position.\"\n          }\n          date={\"12 June 2020\"}\n        />\n      </div>\n      <div className=\"faculty__coordinators\">\n        <h1>Faculty Co-ordinators</h1>\n      </div>\n      <div className=\"faculty__content\">\n        <Coordinators\n          image={image2}\n          name=\"Dr. Neelam Duhan\"\n          post=\"Director digital cell, Club Coordinator Geeksman\"\n        />\n        <Coordinators\n          image={image1}\n          name=\"Dr. Komal Kumar Bhatia\"\n          post=\"Chairperson Computer Engineering dept\"\n        />\n      </div>\n      <div className=\"faculty__coordinators\">\n        <h1>Our Founders</h1>\n      </div>\n      <div className=\"faculty__content\">\n        <Coordinators\n          image={sahil}\n          name=\"Sahil Singla\"\n          post=\"Amazon\"\n        />\n        <Coordinators\n          image={trilok}\n          name=\"Trilok Kaushik\"\n          post=\"Samsung\"\n        />\n        <Coordinators\n          image={manmeet}\n          name=\"Manmeet\"\n          post=\"Amazon\"\n        />\n      </div>\n      <div className=\"our__members\">\n        <h1>Our Leads</h1>\n        <div className=\"faculty__content\">\n          <Coordinators\n            image={Vineet}\n            name=\"Vineet Rathee\"\n            post=\"Secretary\"\n          />\n          <Coordinators\n            image={ritik}\n            name=\"Ritik Chauhan\"\n            post=\"Secretary\"\n          />\n          <Coordinators\n            image={Dinesh}\n            name=\"Dinesh Duhan\"\n            post=\"Secretary\"\n          />\n        </div>\n       \n        <div className=\"faculty__content\">\n          <Coordinators\n            image={Aayush}\n            name=\"Aayush Tyagi\"\n            post=\"Joint Secretary\"\n          />\n          <Coordinators\n            image={nitika}\n            name=\"Nitika Bansal\"\n            post=\"Joint Secretary\"\n          />\n          <Coordinators\n            image={rishabh}\n            name=\"Rishabh Gupta\"\n            post=\"Joint Secretary\"\n          />\n        </div>\n        <h1>Our Members</h1>\n        <MemberCard />\n      </div>\n      {/*<div className=\"our__members\">\n        <h1>Our Members</h1>\n      </div>\n      <div className=\"our__members-content\">\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n        <MemberCard image={image} name=\"Aayush Tyagi\" post=\"Junior Secretary\" />\n      </div>\n        */}\n      <div className=\"developers\">\n        <h1>Developers</h1>\n      </div>\n      <div className=\"developer__content\">\n        <DevCard\n          name=\"Aayush Tyagi\"\n          stack=\"Fullstack Developer\"\n          image={Aayush}\n        />\n        <DevCard\n          name=\"Parag Thakur\"\n          stack=\"Fullstack Developer\"\n          image={image}\n        />\n        <DevCard\n          name=\"Shubham Bansal\"\n          stack=\"Backend Developer\"\n          \n        />\n        \n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getMember: () => {\n      dispatch(actions.getMember());\n    },\n    \n  };\n};\n\n\n\nexport default connect(null,mapDispatchToProps)(About);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/NotFound.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/contact.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/index.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/HomePage.js",["189","190"],"import React,{useState} from 'react';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport Navbar from '../Navbar';\nimport HomepageCarousel from './HomepageCarousel';\nimport LoginModal from '../utils/modals/modal';\n// import Footer from './Footer';\n\nconst HomePage = () => {\n    \n    return (\n        <div className=\"homepage\">\n            <Navbar />\n            <HomepageCarousel />\n\n            {/* <Footer /> */}\n        </div>\n    );\n}\n\nexport default HomePage;","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/Contests.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/loginpage.js",["191","192","193"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Modal from \"../utils/modals/modal\";\nimport { Redirect } from \"react-router-dom\";\nimport geeksman from \"../images/png/geeksman.png\";\nimport Loader from '../Loader/Loader'\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass LoginPage extends Component {\n  state = {\n    activeClass: \"container\",\n    email: \"\",\n    password: \"\",\n    newemail: \"\",\n    newpassword: \"\",\n    validatenewpassword: \"\",\n    name: \"\",\n    success: false,\n    alert: \"\",\n    modal: false,\n    modalmessage: \"\",\n    modalheader: \"\",\n    field: \"\",\n    loader:false\n  };\n\n\n  signInShow = (e) => {\n    e.preventDefault();\n    this.setState({ activeClass: \"container\" });\n  };\n\n  signUpShow = (e) => {\n    e.preventDefault();\n    this.setState({ activeClass: \"container active\" });\n  };\n\n  setLogin = (e) => {\n    e.preventDefault();\n    if (this.state.email === \"\") {\n      this.setState({\n        alert: \"Please Enter Email\",\n        success: true,\n      });\n    } else if (this.state.password === \"\") {\n      this.setState({\n        alert: \"Please Enter Password\",\n        success: true,\n      });\n    } else {\n      this.props.reduxLogin(this.state.email, this.state.password);\n      this.setState({loader:true})\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ success: false });\n  };\n\n  handleForgetPassword = () => {\n    this.setState({\n      modal: true,\n      modalmessage:\n        \"Please type your emailaddress associated with your account, we will send an email to you, check your email inbox to reset your password. If you are unable to find the reset email please check your spam folder.\",\n      modalheader: \"Reset your password\",\n      field: \"Type Your Email\",\n    });\n  };\n\n  errorHandle = () =>{\n    this.setState({success:true,alert:\"Wrong id/Password\"})\n  }\n\n  setSignup = (e) => {\n    e.preventDefault();\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    var passwordformat = /^(?=(.*[a-zA-Z]){1,})(?=(.*[0-9]){2,}).{8,}$/;\n\n    if (this.state.name === \"\") {\n      this.setState({ alert: \"Enter Valid Name\", success: true });\n      console.log(\"enter name\");\n    } else if (!this.state.newemail.match(mailformat)) {\n      this.setState({ alert: \"Enter Valid Email\", success: true });\n    } else if (this.state.newpassword === \"\") {\n      this.setState({ alert: \"Enter Password\", success: true });\n    } else if (!this.state.newpassword.match(passwordformat)) {\n      this.setState({\n        alert: \"Password must be minimun 8 digits with atleast 2 numericals\",\n        success: true,\n      });\n    } else if (this.state.validatenewpassword === this.state.newpassword) {\n\n      this.props.postUser(\n        this.state.name,\n        this.state.newemail,\n        this.state.newpassword\n      );\n\n      this.setState({\n        modal: true,\n        modalmessage:\n          \"Please check your email inbox to confirm your email address. If you are unable to find the confirmation email please check your spam folder.\",\n        modalheader: \"Confirm your email address\",\n      });\n    } else {\n      this.setState({ alert: \"Password doesnot match\", success: true });\n    }\n  };\n\n  render() {\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      authRedirect = <Redirect to=\"/contests\" />;\n    }\n    let authRedirect2 = null;\n    if (this.props.forgetstatus === \"OK\") {\n      authRedirect2 = <Redirect to=\"/contests\" />;\n    }\n    \n\n\n    return (\n      <>\n      {(this.props.loading)?<Loader/>:<></>}\n\n      {this.props.posterror!==\"\"?<Modal\n          show={true}\n          message=\"You are already registered or you have not verified your mail\"\n          confirm=\"false\"\n          heading=\"Error\"\n        />:<></>}\n      \n        <div className=\"section\">\n          <div class={this.state.activeClass}>\n            <div class=\"user signinBx\">\n              <div class=\"imgBx\">\n                <img src={geeksman} alt=\"\" />\n              </div>\n              <div class=\"formBx\">\n                <form>\n                  <h2>Sign In</h2>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={(e) =>\n                      this.setState({\n                        email: e.target.value,\n                      })\n                    }\n                    value={this.state.email}\n                  />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) =>\n                      this.setState({\n                        password: e.target.value,\n                      })\n                    }\n                    value={this.state.password}\n                  />\n                  <input\n                    onClick={(e) => this.setLogin(e)}\n                    type=\"submit\"\n                    name=\"\"\n                    value=\"Login\"\n                  />\n                  <br />\n                  <p class=\"signup\">\n                    <a href=\"#\" onClick={(e) => this.handleForgetPassword(e)}>\n                      Forgot your password?\n                    </a>\n                  </p>\n\n                  <p class=\"signup\">\n                    Don't have an account ?\n                    <a href=\"#\" onClick={(e) => this.signUpShow(e)}>\n                      Sign Up\n                    </a>\n                  </p>\n                </form>\n              </div>\n            </div>\n            <div class=\"user signupBx\">\n              <div class=\"formBx\">\n                <form>\n                  <h2>Create an account</h2>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    onChange={(e) =>\n                      this.setState({\n                        name: e.target.value,\n                      })\n                    }\n                    value={this.state.name}\n                  />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={(e) =>\n                      this.setState({\n                        newemail: e.target.value,\n                      })\n                    }\n                    value={this.state.newemail}\n                  />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) =>\n                      this.setState({\n                        newpassword: e.target.value,\n                      })\n                    }\n                    value={this.state.newpassword}\n                  />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    onChange={(e) =>\n                      this.setState({\n                        validatenewpassword: e.target.value,\n                      })\n                    }\n                    value={this.state.validatenewpassword}\n                  />\n                  <input\n                    onClick={(e) => this.setSignup(e)}\n                    type=\"submit\"\n                    name=\"\"\n                    value=\"Sign Up\"\n                  />\n                  <p class=\"signup\">\n                    Already have an account ?\n                    <a href=\"#\" onClick={(e) => this.signInShow(e)}>\n                      Sign In\n                    </a>\n                  </p>\n                </form>\n              </div>\n              <div class=\"imgBx\">\n                <img src={geeksman} alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        {authRedirect}\n        {authRedirect2}\n\n        <Snackbar\n          open={this.state.success}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n        >\n          <Alert onClose={this.handleClose} severity=\"error\">\n            {this.state.alert}\n          </Alert>\n        </Snackbar>\n        <Modal\n          show={this.state.modal}\n          message={this.state.modalmessage}\n          confirm=\"false\"\n          heading={this.state.modalheader}\n          field={this.state.field}\n        />\n        \n       \n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    reduxLogin: (email, password) => {\n      dispatch(actions.reduxLogin(email, password));\n    },\n    postUser: (name, email, password) => {\n      dispatch(actions.postUser(name, email, password));\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    isAuthenticated: state.auth.token!==null,\n    forgetstatus: state.auth.forgetstatus,\n    error:state.auth.autherror,\n    errorauth:state.auth.autherror!==null,\n    loading:state.auth.loading,\n    posterror:state.user.posterror\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/userpanel/userpanel.js",["194","195","196","197","198"],"import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ProfileIcon from \"@material-ui/icons/AccountBox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Participation from \"./Participation\";\nimport * as actions from \"../../store/actions/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport Modal from '../utils/modals/modal'\nimport {Redirect} from 'react-router-dom'\nimport Spinner from '../utils/spinner'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction UserPanel(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [college, setCollege] = React.useState(\"\");\n  const [year, setYear] = React.useState(\"\");\n  const [phoneno, setPhoneno] = React.useState(\"\");\n  const [branch, setBranch] = React.useState(\"\");\n  const [image, setImage] = React.useState(\"\");\n  const [redirect,setRedirect] =React.useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const [selectedbtn, setselectedbtn] = React.useState(\"homebtn\");\n\n  const handlePatch=(e)=>{\n    e.preventDefault();\n    props.patchUser(props.userid,college,year,branch,phoneno)\n\n  }\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <ListItem\n          button\n          onClick={() => {\n            setselectedbtn(\"homebtn\");\n          }}\n          selected={selectedbtn === \"homebtn\"}\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Details\" />\n        </ListItem>\n        <Divider />\n        <ListItem\n          button\n          onClick={() => {\n            setselectedbtn(\"updateprofile\");\n          }}\n          selected={selectedbtn === \"updateprofile\"}\n        >\n          <ListItemIcon>\n            <ProfileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"UpdateProfile\" />\n        </ListItem>\n        <ListItem\n          button\n          onClick={() => {\n            setRedirect(true);\n          }}\n        >\n          <ListItemIcon>\n            <ProfileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Return To Home\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n    let authRedirect2 = null;\n\n    if (redirect) {\n      authRedirect2 = (\n        <Redirect to=\"/\" />\n      );\n    }\n\n  return (\n    <div className={classes.root}>\n      \n      {authRedirect2}\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className=\"headinginfo\">\n            <h5>Welcome,</h5>\n            {props.userdata.name}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography>\n          {selectedbtn === \"homebtn\" && (\n            <div className=\"aboutuser\">\n              <div className=\"userinfo\">\n                <div className=\"userimagebox\">\n                  <Avatar className=\"styleimage\">\n                    <img src={props.userdata.image} />\n                  </Avatar>\n                </div>\n                <div className=\"userinfobox\">\n                  <div className=\"nameinfo\">\n                    <h3>{props.userdata.name}</h3>\n                  </div>\n                  <div className=\"collegeinfo\">\n                    <span>Studying at {props.userdata.college}</span>\n                  </div>\n\n                  <div className=\"educationinfo\">\n                    <h4>\n                      Education: <span>{props.userdata.college}</span>\n                    </h4>\n                  </div>\n                </div>\n              </div>\n              <div className=\"participationinfo\">\n                <div className=\"participationheading\">\n                  <h2 className=\"participationheadingstyle\">Participation:</h2>\n                </div>\n                <div className=\"contestinfocards\">\n                    <h3>You haven't participated in any contest uptil now!!</h3>\n                </div>\n              </div>\n            </div>\n          )}\n          {selectedbtn === \"updateprofile\" && (\n            <div>\n              <div className=\"mainupdate\">\n                <h1>Update Profile</h1>\n              </div>\n              <div className=\"updateform\">\n              <TextField\n                  id=\"standard-full-width\"\n                  label=\"Name\"\n                  style={{ margin: 8 }}\n                  placeholder=\"Name\"\n                  fullWidth\n                  disabled\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={props.userdata.name}\n                  \n                />\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Email\"\n                  style={{ margin: 8 }}\n                  placeholder=\"Email\"\n                  fullWidth\n                  disabled\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={props.userdata.email}\n                />\n                \n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"College\"\n                  style={{ margin: 8 }}\n                  placeholder=\"College\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={college}\n                  onChange={(e) => setCollege(e.target.value)}\n                />\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Year\"\n                  style={{ margin: 8 }}\n                  placeholder=\"Year\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={year}\n                  onChange={(e) => setYear(e.target.value)}\n                />\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Branch\"\n                  style={{ margin: 8 }}\n                  placeholder=\"Branch\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={branch}\n                  onChange={(e) => setBranch(e.target.value)}\n                />\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Phone No (Whatsapp)\"\n                  style={{ margin: 8 }}\n                  placeholder=\"Phone No (Whatsapp)\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={phoneno}\n                  onChange={(e) => setPhoneno(e.target.value)}\n                />\n                <button className=\"login-button\" onClick={e=>handlePatch(e)}>Submit</button>\n              </div>\n              \n            </div>\n          )}\n\n          {props.patchStatus!==null?<Modal show=\"true\" message=\"Details Updated Successfully\" header=\"Success!\" confirm=\"false\" />:<></>}\n          \n        </Typography>\n      </main>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuestions: (token) => {\n      dispatch(actions.getQuestions(token));\n    },\n    postQuestions: (token, data) => {\n      dispatch(actions.postQuestions(token, data));\n    },\n    patchUser:(uid,clg,yr,br,phone) =>{\n      dispatch(actions.patchUser(uid,clg,yr,br,phone))\n    }\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    isAuthenticated: state.auth.token != null,\n    userdata: state.user.userdata,\n    usercontestdata: state.user.usercontestdata,\n    userid:state.auth.userid,\n    patchStatus:state.user.patchStatus\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPanel);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Loader/Loader.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Navbar.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/questionpage.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/auth.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/contests.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/about.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/store/actions/users.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/Developers-card.js",["199"],"import React from \"react\";\n\n\nexport default function MediaCard(props) {\n  return (\n     \n          <div className=\"devcards\"> \n              <div class=\"card\">\n    <div class=\"bannerdeveloper\">\n      <img src={props.image}/>\n    </div>\n    <div class=\"menu\">\n      \n    </div>\n    <h2 class=\"name\">{props.name}</h2>\n    <div class=\"title\">{props.stack}</div>\n    <div class=\"actions\">\n       \n    </div>\n   \n</div>    \n          </div>\n        \n  );\n}\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/events.js",["200"],"import React from 'react'\n\nfunction Events(props){\n    return(\n\n        <div className=\"events__card\">\n          <div className=\"event-image\">\n           <img src={props.image}/>\n          </div>\n          <div className=\"event-info\">\n           <h2>{props.eventname}</h2>\n           <div className=\"description_event\">\n               <p>\n                   {props.description}\n\n               </p>\n           </div>\n           <div className=\"dateandtime\">\n               <span><b>Date</b>{props.date}</span>\n               <span><b>Time</b>{props.time}</span>\n               <span><b>Venue</b>:-Online</span>\n           </div>\n           <div className=\"entryfee\">\n               <span><b>Entry Fee</b>:-Free</span>\n           </div>\n          </div>\n        </div>\n\n    )\n    };\n\n    export default Events;\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/coordinators.js",["201"],"import React, { Component } from 'react';\n\nclass Developer extends Component {\n  render() {\n    return (\n      <div>\n        \n        \n        <div class=\"card heightis\">\n    <div class=\"bannercr\">\n      <img src={this.props.image}/>\n    </div>\n    <div class=\"menu\">\n      \n    </div>\n    <h2 class=\"name\">{this.props.name}</h2>\n    <div class=\"title\">{this.props.post}</div>\n    <div class=\"actions\">\n       \n    </div>\n   \n</div>    \n\n         \n        </div>\n      \n    );\n  }\n}\nexport default Developer;","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/About-memberscard.js",["202","203","204"],"import React from \"react\";\nimport image from \"../images/image.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction Aboutprofilecard(props) {\n  var members = (\n    <>\n      {props.member.map((member, index) => (\n        <>\n          <div class=\"card\" style={{width:'18rem'}}>\n            <div class=\"banner\">\n              <img src={member.image} />\n            </div>\n            <div class=\"menu\"></div>\n            <h2 class=\"name\">{member.name}</h2>\n            <div class=\"title\">{member.post}</div>\n            <div className=\"branch\">\n              <span>\n                <b>Branch</b>:-{member.batch} Year {member.branch}\n              </span>\n            </div>\n            <div className=\"sociallinks\">\n              <span>\n                <b>Social</b>:-&nbsp;&nbsp;\n              </span>\n              <Link href={member.github} className=\"github\">\n                <i class=\"fab fa-github\" aria-hidden=\"true\"></i>\n              </Link>\n              <Link href={member.instagram} className=\"insta\">\n                <i className=\"fab fa-instagram\"></i>\n              </Link>\n              <Link href={member.linkedln} className=\"linkedin\">\n                <i class=\"fab fa-linkedin\"></i>\n              </Link>\n            </div>\n            <div class=\"actions\"></div>\n          </div>\n        </>\n      ))}\n    </>\n  );\n\n  return (\n    <div className=\"faculty__content\">\n      {members}\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    member: state.about.memberdata,\n  };\n};\n\nexport default connect(mapStateToProps)(Aboutprofilecard);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/HomepageCarousel.js",["205"],"import React, { Component } from \"react\";\nimport OwlCarousel from \"react-owl-carousel\";\nimport LoginSlide from \"./LoginSlide\";\nimport TopPerformersSlide from \"./TopPerformersSlide\";\nimport ContestSlide from \"./ContestSlide\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass HomepageCarousel extends Component {\n  \n  render() {\n    return (\n      <div className=\"homepage-carousel-container\">\n        <OwlCarousel\n          className=\"owl-theme\"\n          loop\n          margin={10}\n          items={1}\n          nav={false}\n          autoplay\n          autoplayTimeout={400000}\n        >\n          <div className=\"item\">\n            <LoginSlide authenticated={this.props.isAuthenticated} />\n          </div>\n          <div className=\"item\">\n            <ContestSlide\n              name={this.props.data[0].Contestname}\n              starttime={this.props.data[0].starttime}\n              endtime={this.props.data[0].endtime}\n            />\n          </div>\n          <div className=\"item\">\n            <TopPerformersSlide />\n          </div>\n          \n        </OwlCarousel>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    isAuthenticated :state.auth.token!==null,\n    data: state.contest.contestdata,\n    userid:state.auth.userid\n  };\n};\n\nexport default connect(mapStateToProps)(HomepageCarousel);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestsHome.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestHome.js",["206","207"],"import React, { Component } from \"react\";\nimport ContestHeader from \"./ContestHeader\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../utils/modals/modal\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from '../Loader/Loader'\n\nclass ContestHome extends Component {\n  state = {\n    open: false,\n    message: \"\",\n    redirect: false,\n    confirm:\"false\",\n    header:\"\",\n    contest:[]\n  };\n\n  CompareDate = (e, start,end) => {\n    e.preventDefault();\n\n    let startdate = new Date(start);\n    let enddate = new Date(end);\n    let nowdate = Date();\n    console.log(startdate)\n   \n    \n      \n        if (startdate > nowdate && nowdate<enddate) {\n            this.setState({ open: true, message: \"The contest is not active. Either the Contest has not started or its not your slot, please wait for your time slot or the contest to start.\", header:\"Message!\" });\n        }\n        else if(enddate < nowdate && nowdate>startdate){\n          this.setState({ open: true, message: \"The contest is not active. Either the Contest has ended or you have missed your slot, please contact admin if it's a mistake.\", header:\"Message!\" });\n        }\n        else{\n            this.setState({\n                open:true,\n                header:\"Confirm Message!\",\n                message:\"Are you sure you want to start the contest. After clicking this you won't be able to backoff\",\n                confirm:true,                \n            })\n        }\n      \n    \n  };\n\n\n  onRedirect = (e,id) => {\n      e.preventDefault(); \n      this.props.getContestToken(this.props.userid,this.props.data[id].id);\n      this.setState({redirect:true})\n  };\n\n  render() {\n    let authRedirect = null;\n\n    var id=(localStorage.getItem(\"activecontest\"));\n\n    if (this.state.redirect && this.props.contesttoken!==null) {\n      this.props.getQuestions(this.props.contesttoken)\n    }\n    if(this.props.questiondata!==null){\n      authRedirect = (\n        <Redirect to={\"/contests/\" + this.props.data[id].Contestname + \"/questions\"} />\n      );\n    }\n\n    return (\n      <>\n      <div id=\"contest-home\">\n        \n        <ContestHeader content=\"Contests\" />\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <div className=\"contest-name\">{this.props.data[id].Contestname}</div>\n            <div className=\"contest-remaining-time\">\n              The contest will start at {this.props.data[id].starttime}{\" \"}\n            </div>\n            <div className=\"contest-instructions-container\">\n              <div className=\"contest-instructions-heading\">Instructions</div>\n              <div className=\"contest-instructions\">\n                {this.props.data[id].rules}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-5\">\n            <button\n            onClick={e=>this.CompareDate(e,this.props.data[id].starttime,this.props.data[id].endtime)}\n              className=\"contest-register-button\"\n            >\n              Start Now\n            </button>\n          </div>\n        </div>\n        <Modal\n          show={this.state.open}\n          message={this.state.message}\n          redirect={e=>this.onRedirect(e,id)}\n          confirm={this.state.confirm}\n          heading={this.state.header}\n          field=\"\"\n        />\n        {authRedirect}\n      </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getContestToken: (uid,cid) => {\n      dispatch(actions.getContestToken(uid,cid));\n    },\n    getQuestions: (token) => {\n      dispatch(actions.getQuestions(token));\n    },\n    \n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    data: state.contest.contestdata,\n    userid:state.auth.userid,\n    registeruserdata:state.contest.registeruserdata,\n    contesttoken:state.contest.contesttoken,\n    questiondata: state.question.questionsdata,\n    loading:state.contest.tokenloading\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContestHome);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/spinner.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/userpanel/Participation.js",["208"],"import React from 'react'\nimport Divider from \"@material-ui/core/Divider\";\nfunction Participation({contestname,rank,marks}) {\n    return (\n        <div className=\"participationcard\">\n            <div className=\"upperhalf\">\n              <h4>{contestname}</h4>\n            </div>\n            \n            <div className=\"lowerhalf\">\n              <div className=\"rankinfo\">\n                Rank:<span>{rank}</span>\n              </div>\n              <div className=\"marksinfo\">\n                Marks:<span>{marks}</span>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Participation\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/utils/modals/modal.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/questionpage/Questiondrawer.js",["209","210","211","212","213","214"],"import React, { useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport QuestionIcon from \"@material-ui/icons/QuestionAnswerTwoTone\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Button from \"@material-ui/core/Button\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport aayush from \"../images/png/aayush.jpg\";\nimport Modal from \"../utils/modals/modal\";\nimport { Redirect } from \"react-router-dom\";\n\nconst drawerWidth = 290;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(0),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [selectedindex, setselected] = React.useState(0);\n  const [activequestion, setactivequestion] = React.useState(\n    props.questiondata[0]\n  );\n  const [tickicon, setTickicon] = React.useState(\n    <DoneIcon style={{ color: \"green\" }} />\n  );\n  const [value, setValue] = React.useState(activequestion.options[0].value);\n  const [savedindex, setSavedindex] = React.useState(null);\n  const [hour, setHour] = React.useState(-1);\n  const [minutes, setMinutes] = React.useState(-1);\n  const [seconds, setSeconds] = React.useState(-1);\n  const [show, setShow] = React.useState(false);\n  const [redirect, setRedirect] = React.useState(false);\n  const [message,setMessage] = React.useState(\"\");\n  const [confirmbutton,setConfirmbutton] =React.useState(\"\");\n\n  const handleTestEnd = () => {\n    setRedirect(true);\n  };\n\n  let authRedirect = null;\n\n  if (redirect) {\n    authRedirect = <Redirect to=\"/\" />;\n  }\n\n  React.useEffect(() => {\n    console.log(props.questiondata);\n    handleFindValue();\n  }, []);\n\n  //Mobile Screen\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  //get Questions\n  useEffect(() => {\n    var countDownIs = new Date().getTime();\n    var countDownDate = countDownIs+(1*60*60*1000)\n\n    // Update the count down every 1 second\n    var x = setInterval(function () {\n      // Get todays date and time\n      var now = new Date().getTime();\n\n      // Find the distance between now an the count down date\n      var distance = countDownDate - now;\n\n      // Time calculations for days, hours, minutes and seconds\n      var hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      setHour(hours);\n      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      setMinutes(minutes);\n      var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      setSeconds(seconds);\n      // Output the result in an element with id=\"demo\"\n\n      // If the count down is over, write some text\n      if (hours === 0 && seconds === 0 && minutes === 0) {\n        clearInterval(x);\n        handePostForce();\n        \n      }\n    }, 1000);\n  }, []);\n\n  //Submit Button\n  const handlePostQuestions = () => {\n    props.postQuestions(props.contesttoken, localStorage.getItem([\"submissions\"]));\n    setShow(true);\n    setConfirmbutton(\"true\");\n    setMessage(\"Are you sure you want to submit your test?\")\n  };\n\n  //Post questions by timer\n\n  const handePostForce=()=>{\n    props.postQuestions(props.contesttoken, localStorage.getItem([\"submissions\"]));\n    setShow(true);\n    setConfirmbutton(\"false\");\n    setMessage(\"The time has ended your test has been successfully submitted!\")\n  }\n\n  //Load Selection of Radio Buttons\n  const createSelection = (e, value) => {\n    setValue(e.target.value);\n  };\n\n  const createArrayQuestions = (e) => {\n    e.preventDefault();\n\n    var myArray = [];\n    // load saved array\n    if (localStorage.getItem([\"submissions\"]) != null) {\n      myArray = JSON.parse(localStorage.getItem([\"submissions\"]));\n    }\n\n    var data = {\n      Question_Id: activequestion._id,\n      optionchosen: value,\n    };\n\n    console.log(myArray.length);\n\n    if (myArray.find((element) => element.Question_Id === activequestion._id)) {\n      for (var i = 0; i < myArray.length; i++) {\n        if (myArray[i].Question_Id === activequestion._id) {\n          myArray[i] = data;\n        }\n      }\n    } else {\n      myArray.push(data);\n    }\n\n    // re-save array\n    localStorage.setItem([\"submissions\"], JSON.stringify(myArray));\n  };\n\n  const handleFindValue = (questionsid) => {\n    var myArray = [];\n    // load saved array\n    if (localStorage.getItem([\"submissions\"]) != null) {\n      myArray = JSON.parse(localStorage.getItem([\"submissions\"]));\n    }\n    var arris = myArray.find(\n      (element) => element.Question_Id === questionsid\n    );\n\n    if (arris !== undefined) {\n      setValue(arris.optionchosen);\n    }\n    else{\n      setValue(value);\n    }\n  };\n\n  //Clear Selection\n  const removeArrayQuestions = (e) => {\n    e.preventDefault();\n    setValue(\"#\");\n    localStorage.removeItem([\"submissions\"]);\n  };\n\n  //Handle Previous Button\n  const handlePrev = (e) => {\n    e.preventDefault();\n    handleFindValue(activequestion._id);\n    if (selectedindex !== 0) {\n      setselected(selectedindex - 1);\n      setactivequestion(props.questiondata[selectedindex - 1]);\n      console.log(selectedindex - 1);\n    } else {\n      setselected(selectedindex);\n      setactivequestion(props.questiondata[selectedindex]);\n    }\n  };\n\n  //Handle Next Button\n  const handleNext = (e) => {\n    e.preventDefault();\n    handleFindValue(activequestion._id);\n    var len = Object.keys(props.questiondata).length - 1;\n    if (selectedindex !== len) {\n      setselected(selectedindex + 1);\n      setactivequestion(props.questiondata[selectedindex + 1]);\n      console.log(selectedindex + 1);\n    } else {\n      setselected(selectedindex);\n      setactivequestion(props.questiondata[selectedindex]);\n    }\n  };\n\n  //Handle Green Tick\n\n  const handleGreenTick = (index) => {\n    var myArray = [];\n    if (localStorage.getItem([\"submissions\"]) !== null) {\n      myArray = JSON.parse(localStorage.getItem([\"submissions\"]));\n    }\n\n    const help = myArray.findIndex((rank) => rank.Question_Id === index);\n    if (help >= 0 && help <= 49) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  //Drawer Map\n  var drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <ListItem>\n        <ListItemText primary=\"Demo Test\" secondary={Date()} />\n      </ListItem>\n      <Divider />\n      <List>\n        {props.questiondata.map((questions, index) => (\n          <React.Fragment>\n            <ListItem\n              button\n              alignItems=\"center\"\n              index={index}\n              selected={selectedindex === index}\n              key={questions._id}\n              onClick={() => {\n                setactivequestion(questions);\n                setselected(index);\n                handleFindValue(questions._id)\n              }}\n            >\n              <ListItemIcon>\n                {\" \"}\n                <QuestionIcon />{\" \"}\n              </ListItemIcon>\n              <ListItemText center primary={\"Question-\" + index} />\n              <ListItemIcon>\n                {localStorage.getItem([\"submissions\"])\n                  ? handleGreenTick(questions._id)\n                    ? tickicon\n                    : null\n                  : null}\n              </ListItemIcon>\n            </ListItem>\n            <Divider />\n          </React.Fragment>\n        ))}\n      </List>\n    </div>\n  );\n\n  //Timer\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            <div className=\"questionpageheader\">\n              <div className=\"timeinfo\">\n                <span>\n                  {hour}hr {minutes}min {seconds}sec\n                </span>\n              </div>\n\n              <div className=\"row prevnextbtn\">\n                <div className=\"col-sm-4 hidden\">\n                  <Button\n                    color=\"danger\"\n                    variant=\"contained\"\n                    onClick={(e) => handlePrev(e)}\n                  >\n                    &larr; prev\n                  </Button>\n                </div>\n                <div className=\"col-sm-4 hidden\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"danger\"\n                    onClick={(e) => handleNext(e)}\n                  >\n                    next &rarr;\n                  </Button>\n                </div>\n                <div className=\"col-sm-4 next-button\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={(e) => handlePostQuestions(e)}\n                    className=\"submit-button\"\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          <div className=\"mainquestion\">\n            <p>\n              <span>Question: </span>\n              {activequestion.question}\n            </p>\n          </div>\n          <div className=\"optionsselect\">\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"Questions\" name=\"Question\" value={value} >\n                <FormControlLabel\n                  value={activequestion.options[0].value}\n                  control={<Radio onClick={(e) => createSelection(e)} />}\n                  label={activequestion.options[0].option}\n                />\n                <FormControlLabel\n                  value={activequestion.options[1].value}\n                  control={<Radio onClick={(e) => createSelection(e)} />}\n                  label={activequestion.options[1].option}\n                />\n                <FormControlLabel\n                  value={activequestion.options[2].value}\n                  control={<Radio onClick={(e) => createSelection(e)} />}\n                  label={activequestion.options[2].option}\n                />\n                <FormControlLabel\n                  value={activequestion.options[3].value}\n                  control={<Radio onClick={(e) => createSelection(e)} />}\n                  label={activequestion.options[3].option}\n                />\n              </RadioGroup>\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"column50\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <button\n                        onClick={(e) => createArrayQuestions(e)}\n                        className=\"login-button\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <button\n                        onClick={(e) => removeArrayQuestions(e)}\n                        className=\"login-button\"\n                      >\n                        Clear\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </FormControl>\n          </div>\n        </Typography>\n      </main>\n      {authRedirect}\n      <Modal\n        show={show}\n        message={message}\n        header=\"Caution!\"\n        field=\"\"\n        confirm={confirmbutton}\n        redirect={(e) => handleTestEnd()}\n      />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuestions: (token) => {\n      dispatch(actions.getQuestions(token));\n    },\n    postQuestions: (token, data) => {\n      dispatch(actions.postQuestions(token, data));\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    questiondata: state.question.questionsdata,\n    contesttoken: state.contest.contesttoken,\n    contestdata:state.contest.contestdata\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsiveDrawer);\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/LoginSlide.js",["215"],"import React, { Component, useState } from \"react\";\nimport mainpng from \"../images/png/main.png\"\nimport { Link } from \"react-router-dom\";\n\n\nclass LoginSlide extends Component {\n  state = {\n    show: false,\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"login-slide container-fluid\">\n          <img src={mainpng} className=\"mainpng\" alt=\"mainimg\"/>\n          <div className=\"login-slide-text-content\">\n            <h1>GeeksMan - The Coding Society</h1>\n            <br />\n            Join the <strong>Coding Society</strong> of CE Department of JCBOSE UST, YMCA{\" \"}\n            <br />\n            Practice coding, prepare for contests, and win challenges.\n          </div>\n          <div className=\"login-buttons\">\n            {this.props.authenticated?<Link className=\"login-button\" to=\"/contests\">\n              Contests\n            </Link> :<> <Link className=\"login-button\" to=\"/login\">\n              Login\n            </Link>\n            <Link className=\"login-button\" to=\"/login\">\n              SignUp\n            </Link></>}\n           \n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LoginSlide;\n","/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/TopPerformersSlide.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/HomePage/ContestSlide.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestHeader.js",[],"/home/assassin/Downloads/Projects/Personal/GeeksMan-2k21-FrontEnd/src/components/Contest/ContestCard.js",["216"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../utils/modals/modal\";\nimport Loader from '../Loader/Loader'\n\nclass ContestCard extends Component {\n  state = {\n    open: false,\n    message: \"NULL\",\n    yesbutton: false,\n    redirect: false,\n    redirectto: false,\n    show: false,\n    redirecttouser:false,\n    page:\"not\"\n  };\n\n  handleActiveContest = (e, userid, id, index) => {\n    e.preventDefault();\n\n    if(this.props.isAuthenticated){\n      if (\n        this.props.userdata.college === null ||\n        this.props.userdata.phoneno === null ||\n        this.props.userdata.year === null ||\n        this.props.userdata.Branch === null\n      ) {\n        this.setState({ show: true,message:\"You have to complete your details before registering for any contest\" });\n      }  else {\n        this.props.registerContest(userid, id);\n        this.setState({ redirectto: true });\n  \n        if (this.props.userdata) {\n          localStorage.setItem(\"activecontest\", index);\n        }\n      }\n    }\n    else{\n      this.setState({ show: true,message:\"Please Login First\",page:\"login\" });\n    }\n\n    \n  };\n\n  handleRedirect = () => {\n    this.setState({ redirect: true });\n  };\n\n  handleRedirectToUserPanel =(e)=>{\n    e.preventDefault();\n    this.setState({redirecttouser:true})\n  }\n\n  render() {\n    let authRedirect = null;\n\n    if (this.state.redirect) {\n      \n        authRedirect = (\n          <Redirect to={\"/contests/\" + this.props.contestname + \"/\"} />\n        );\n     \n    }\n\n    let authRedirect2 = null;\n\n    if (this.state.redirecttouser) {\n\n      if(this.state.page===\"login\"){\n        authRedirect = (\n          <Redirect to=\"/login\"/>\n        );\n      }\n      else{\n      authRedirect2 = (\n        <Redirect to=\"/userpanel\" />\n      );\n      }\n    }\n\n    if (this.state.registeruserdata !== null) {\n      if (this.state.redirectto) {\n        this.handleRedirect();\n      }\n    }\n\n    return (\n      <>\n      <div className=\"contest-card\">\n        {authRedirect}\n        {authRedirect2}\n        <div className=\"contest-card-heading\">\n          <Link\n            onClick={(e) =>\n              this.handleActiveContest(\n                e,\n                this.props.userdata.id,\n                this.props.cid,\n                this.props.id\n              )\n            }\n          >\n            {this.props.contestname}\n          </Link>\n        </div>\n\n        <div className=\"contest-card-description\">\n          {this.props.smalldescription}\n        </div>\n        <div className=\"contest-card-timer\">\n          <span className=\"contest-card-timer-prefix\">Starts at </span>\n\n          <span className=\"contes-card-time\">{this.props.starttime}</span>\n        </div>\n        <div className=\"contest-card-timer\">\n          <span className=\"contest-card-timer-prefix\">Ends at </span>\n          <span className=\"contes-card-time\">{this.props.endtime}</span>\n        </div>\n        <div className=\"contest-card-register-button\">\n          <Link\n            onClick={(e) =>\n              this.handleActiveContest(\n                e,\n                this.props.userdata.id,\n                this.props.cid,\n                this.props.id\n              )\n            }\n          >\n            Register Now\n          </Link>\n        </div>\n        <Modal\n          show={this.state.show}\n          heading=\"Error Correction\"\n          message={this.state.message}\n          field=\"\"\n          confirm=\"true\"\n          redirect={e=>this.handleRedirectToUserPanel(e)}\n        />\n      </div>\n     </>\n    );\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    registerContest: (userid, contestid) => {\n      dispatch(actions.registerContest(userid, contestid));\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userdata: state.user.userdata,\n    registeruserdata: state.contest.registeruserdata,\n    isAuthenticated:state.auth.token!==null\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContestCard);\n",["217","218"],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":50,"column":11,"nodeType":"225","endLine":55,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":1,"column":15,"nodeType":"228","messageId":"229","endLine":1,"endColumn":23},{"ruleId":"226","severity":1,"message":"230","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":175,"column":21,"nodeType":"225","endLine":175,"endColumn":79},{"ruleId":"231","severity":1,"message":"232","line":182,"column":21,"nodeType":"225","endLine":182,"endColumn":69},{"ruleId":"231","severity":1,"message":"232","line":241,"column":21,"nodeType":"225","endLine":241,"endColumn":69},{"ruleId":"226","severity":1,"message":"233","line":19,"column":8,"nodeType":"228","messageId":"229","endLine":19,"endColumn":21},{"ruleId":"226","severity":1,"message":"234","line":25,"column":8,"nodeType":"228","messageId":"229","endLine":25,"endColumn":15},{"ruleId":"226","severity":1,"message":"235","line":71,"column":10,"nodeType":"228","messageId":"229","endLine":71,"endColumn":15},{"ruleId":"226","severity":1,"message":"236","line":71,"column":17,"nodeType":"228","messageId":"229","endLine":71,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":200,"column":21,"nodeType":"225","endLine":200,"endColumn":55},{"ruleId":"237","severity":1,"message":"238","line":10,"column":7,"nodeType":"225","endLine":10,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":8,"column":12,"nodeType":"225","endLine":8,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":11,"column":7,"nodeType":"225","endLine":11,"endColumn":36},{"ruleId":"226","severity":1,"message":"239","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":13},{"ruleId":"226","severity":1,"message":"240","line":4,"column":13,"nodeType":"228","messageId":"229","endLine":4,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":14,"column":15,"nodeType":"225","endLine":14,"endColumn":41},{"ruleId":"226","severity":1,"message":"240","line":6,"column":13,"nodeType":"228","messageId":"229","endLine":6,"endColumn":20},{"ruleId":"226","severity":1,"message":"241","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":14},{"ruleId":"226","severity":1,"message":"242","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":14},{"ruleId":"226","severity":1,"message":"243","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"226","severity":1,"message":"244","line":25,"column":8,"nodeType":"228","messageId":"229","endLine":25,"endColumn":14},{"ruleId":"226","severity":1,"message":"245","line":73,"column":20,"nodeType":"228","messageId":"229","endLine":73,"endColumn":31},{"ruleId":"226","severity":1,"message":"246","line":77,"column":10,"nodeType":"228","messageId":"229","endLine":77,"endColumn":20},{"ruleId":"226","severity":1,"message":"247","line":77,"column":22,"nodeType":"228","messageId":"229","endLine":77,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":99,"column":6,"nodeType":"250","endLine":99,"endColumn":8,"suggestions":"251"},{"ruleId":"248","severity":1,"message":"252","line":137,"column":6,"nodeType":"250","endLine":137,"endColumn":8,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"242","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":14},{"ruleId":"219","replacedBy":"254"},{"ruleId":"221","replacedBy":"255"},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LoginModal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Participation' is defined but never used.","'Spinner' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'image' is defined but never used.","'actions' is defined but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","'Divider' is defined but never used.","'aayush' is defined but never used.","'setTickicon' is assigned a value but never used.","'savedindex' is assigned a value but never used.","'setSavedindex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'handleFindValue' and 'props.questiondata'. Either include them or remove the dependency array.","ArrayExpression",["258"],"React Hook useEffect has a missing dependency: 'handePostForce'. Either include it or remove the dependency array.",["259"],["256"],["257"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [handleFindValue, props.questiondata]",{"range":"264","text":"265"},"Update the dependencies array to be: [handePostForce]",{"range":"266","text":"267"},[3242,3244],"[handleFindValue, props.questiondata]",[4374,4376],"[handePostForce]"]